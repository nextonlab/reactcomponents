// +build !ignore_autogenerated

// Copyright PingCAP, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by deepcopy-gen. DO NOT EDIT.

package v1alpha1

import (
	time "time"

	model "github.com/prometheus/common/model"
	appsv1 "k8s.io/api/apps/v1"
	v1 "k8s.io/api/core/v1"
	extensionsv1beta1 "k8s.io/api/extensions/v1beta1"
	v1beta1 "k8s.io/apiextensions-apiserver/pkg/apis/apiextensions/v1beta1"
	runtime "k8s.io/apimachinery/pkg/runtime"
	types "k8s.io/apimachinery/pkg/types"

	binlog "github.com/pingcap/tipocket/pkg/tidb-operator/binlog"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoResource) DeepCopyInto(out *AutoResource) {
	*out = *in
	out.CPU = in.CPU.DeepCopy()
	out.Memory = in.Memory.DeepCopy()
	out.Storage = in.Storage.DeepCopy()
	if in.Count != nil {
		in, out := &in.Count, &out.Count
		*out = new(int32)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoResource.
func (in *AutoResource) DeepCopy() *AutoResource {
	if in == nil {
		return nil
	}
	out := new(AutoResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoRule) DeepCopyInto(out *AutoRule) {
	*out = *in
	if in.MinThreshold != nil {
		in, out := &in.MinThreshold, &out.MinThreshold
		*out = new(float64)
		**out = **in
	}
	if in.ResourceTypes != nil {
		in, out := &in.ResourceTypes, &out.ResourceTypes
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoRule.
func (in *AutoRule) DeepCopy() *AutoRule {
	if in == nil {
		return nil
	}
	out := new(AutoRule)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BRConfig) DeepCopyInto(out *BRConfig) {
	*out = *in
	if in.Concurrency != nil {
		in, out := &in.Concurrency, &out.Concurrency
		*out = new(uint32)
		**out = **in
	}
	if in.RateLimit != nil {
		in, out := &in.RateLimit, &out.RateLimit
		*out = new(uint)
		**out = **in
	}
	if in.Checksum != nil {
		in, out := &in.Checksum, &out.Checksum
		*out = new(bool)
		**out = **in
	}
	if in.SendCredToTikv != nil {
		in, out := &in.SendCredToTikv, &out.SendCredToTikv
		*out = new(bool)
		**out = **in
	}
	if in.OnLine != nil {
		in, out := &in.OnLine, &out.OnLine
		*out = new(bool)
		**out = **in
	}
	if in.Options != nil {
		in, out := &in.Options, &out.Options
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BRConfig.
func (in *BRConfig) DeepCopy() *BRConfig {
	if in == nil {
		return nil
	}
	out := new(BRConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Backup) DeepCopyInto(out *Backup) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Backup.
func (in *Backup) DeepCopy() *Backup {
	if in == nil {
		return nil
	}
	out := new(Backup)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Backup) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackupCondition) DeepCopyInto(out *BackupCondition) {
	*out = *in
	in.LastTransitionTime.DeepCopyInto(&out.LastTransitionTime)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackupCondition.
func (in *BackupCondition) DeepCopy() *BackupCondition {
	if in == nil {
		return nil
	}
	out := new(BackupCondition)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackupList) DeepCopyInto(out *BackupList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Backup, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackupList.
func (in *BackupList) DeepCopy() *BackupList {
	if in == nil {
		return nil
	}
	out := new(BackupList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *BackupList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackupSchedule) DeepCopyInto(out *BackupSchedule) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackupSchedule.
func (in *BackupSchedule) DeepCopy() *BackupSchedule {
	if in == nil {
		return nil
	}
	out := new(BackupSchedule)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *BackupSchedule) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackupScheduleList) DeepCopyInto(out *BackupScheduleList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]BackupSchedule, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackupScheduleList.
func (in *BackupScheduleList) DeepCopy() *BackupScheduleList {
	if in == nil {
		return nil
	}
	out := new(BackupScheduleList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *BackupScheduleList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackupScheduleSpec) DeepCopyInto(out *BackupScheduleSpec) {
	*out = *in
	if in.MaxBackups != nil {
		in, out := &in.MaxBackups, &out.MaxBackups
		*out = new(int32)
		**out = **in
	}
	if in.MaxReservedTime != nil {
		in, out := &in.MaxReservedTime, &out.MaxReservedTime
		*out = new(string)
		**out = **in
	}
	in.BackupTemplate.DeepCopyInto(&out.BackupTemplate)
	if in.StorageClassName != nil {
		in, out := &in.StorageClassName, &out.StorageClassName
		*out = new(string)
		**out = **in
	}
	if in.ImagePullSecrets != nil {
		in, out := &in.ImagePullSecrets, &out.ImagePullSecrets
		*out = make([]v1.LocalObjectReference, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackupScheduleSpec.
func (in *BackupScheduleSpec) DeepCopy() *BackupScheduleSpec {
	if in == nil {
		return nil
	}
	out := new(BackupScheduleSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackupScheduleStatus) DeepCopyInto(out *BackupScheduleStatus) {
	*out = *in
	if in.LastBackupTime != nil {
		in, out := &in.LastBackupTime, &out.LastBackupTime
		*out = (*in).DeepCopy()
	}
	if in.AllBackupCleanTime != nil {
		in, out := &in.AllBackupCleanTime, &out.AllBackupCleanTime
		*out = (*in).DeepCopy()
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackupScheduleStatus.
func (in *BackupScheduleStatus) DeepCopy() *BackupScheduleStatus {
	if in == nil {
		return nil
	}
	out := new(BackupScheduleStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackupSpec) DeepCopyInto(out *BackupSpec) {
	*out = *in
	in.ResourceRequirements.DeepCopyInto(&out.ResourceRequirements)
	if in.Env != nil {
		in, out := &in.Env, &out.Env
		*out = make([]v1.EnvVar, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.From != nil {
		in, out := &in.From, &out.From
		*out = new(TiDBAccessConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.TikvGCLifeTime != nil {
		in, out := &in.TikvGCLifeTime, &out.TikvGCLifeTime
		*out = new(string)
		**out = **in
	}
	in.StorageProvider.DeepCopyInto(&out.StorageProvider)
	if in.StorageClassName != nil {
		in, out := &in.StorageClassName, &out.StorageClassName
		*out = new(string)
		**out = **in
	}
	if in.BR != nil {
		in, out := &in.BR, &out.BR
		*out = new(BRConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.Dumpling != nil {
		in, out := &in.Dumpling, &out.Dumpling
		*out = new(DumplingConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.Tolerations != nil {
		in, out := &in.Tolerations, &out.Tolerations
		*out = make([]v1.Toleration, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ImagePullSecrets != nil {
		in, out := &in.ImagePullSecrets, &out.ImagePullSecrets
		*out = make([]v1.LocalObjectReference, len(*in))
		copy(*out, *in)
	}
	if in.TableFilter != nil {
		in, out := &in.TableFilter, &out.TableFilter
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Affinity != nil {
		in, out := &in.Affinity, &out.Affinity
		*out = new(v1.Affinity)
		(*in).DeepCopyInto(*out)
	}
	if in.PodSecurityContext != nil {
		in, out := &in.PodSecurityContext, &out.PodSecurityContext
		*out = new(v1.PodSecurityContext)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackupSpec.
func (in *BackupSpec) DeepCopy() *BackupSpec {
	if in == nil {
		return nil
	}
	out := new(BackupSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackupStatus) DeepCopyInto(out *BackupStatus) {
	*out = *in
	in.TimeStarted.DeepCopyInto(&out.TimeStarted)
	in.TimeCompleted.DeepCopyInto(&out.TimeCompleted)
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]BackupCondition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackupStatus.
func (in *BackupStatus) DeepCopy() *BackupStatus {
	if in == nil {
		return nil
	}
	out := new(BackupStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BasicAuth) DeepCopyInto(out *BasicAuth) {
	*out = *in
	in.Username.DeepCopyInto(&out.Username)
	in.Password.DeepCopyInto(&out.Password)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BasicAuth.
func (in *BasicAuth) DeepCopy() *BasicAuth {
	if in == nil {
		return nil
	}
	out := new(BasicAuth)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BasicAutoScalerSpec) DeepCopyInto(out *BasicAutoScalerSpec) {
	*out = *in
	if in.Rules != nil {
		in, out := &in.Rules, &out.Rules
		*out = make(map[v1.ResourceName]AutoRule, len(*in))
		for key, val := range *in {
			(*out)[key] = *val.DeepCopy()
		}
	}
	if in.ScaleInIntervalSeconds != nil {
		in, out := &in.ScaleInIntervalSeconds, &out.ScaleInIntervalSeconds
		*out = new(int32)
		**out = **in
	}
	if in.ScaleOutIntervalSeconds != nil {
		in, out := &in.ScaleOutIntervalSeconds, &out.ScaleOutIntervalSeconds
		*out = new(int32)
		**out = **in
	}
	if in.External != nil {
		in, out := &in.External, &out.External
		*out = new(ExternalConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.Resources != nil {
		in, out := &in.Resources, &out.Resources
		*out = make(map[string]AutoResource, len(*in))
		for key, val := range *in {
			(*out)[key] = *val.DeepCopy()
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BasicAutoScalerSpec.
func (in *BasicAutoScalerSpec) DeepCopy() *BasicAutoScalerSpec {
	if in == nil {
		return nil
	}
	out := new(BasicAutoScalerSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BasicAutoScalerStatus) DeepCopyInto(out *BasicAutoScalerStatus) {
	*out = *in
	if in.LastAutoScalingTimestamp != nil {
		in, out := &in.LastAutoScalingTimestamp, &out.LastAutoScalingTimestamp
		*out = (*in).DeepCopy()
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BasicAutoScalerStatus.
func (in *BasicAutoScalerStatus) DeepCopy() *BasicAutoScalerStatus {
	if in == nil {
		return nil
	}
	out := new(BasicAutoScalerStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Binlog) DeepCopyInto(out *Binlog) {
	*out = *in
	if in.Enable != nil {
		in, out := &in.Enable, &out.Enable
		*out = new(bool)
		**out = **in
	}
	if in.WriteTimeout != nil {
		in, out := &in.WriteTimeout, &out.WriteTimeout
		*out = new(string)
		**out = **in
	}
	if in.IgnoreError != nil {
		in, out := &in.IgnoreError, &out.IgnoreError
		*out = new(bool)
		**out = **in
	}
	if in.BinlogSocket != nil {
		in, out := &in.BinlogSocket, &out.BinlogSocket
		*out = new(string)
		**out = **in
	}
	if in.Strategy != nil {
		in, out := &in.Strategy, &out.Strategy
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Binlog.
func (in *Binlog) DeepCopy() *Binlog {
	if in == nil {
		return nil
	}
	out := new(Binlog)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CDCConfigWraper) DeepCopyInto(out *CDCConfigWraper) {
	*out = *in
	if in.GenericConfig != nil {
		in, out := &in.GenericConfig, &out.GenericConfig
		*out = (*in).DeepCopy()
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CDCConfigWraper.
func (in *CDCConfigWraper) DeepCopy() *CDCConfigWraper {
	if in == nil {
		return nil
	}
	out := new(CDCConfigWraper)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterRef) DeepCopyInto(out *ClusterRef) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterRef.
func (in *ClusterRef) DeepCopy() *ClusterRef {
	if in == nil {
		return nil
	}
	out := new(ClusterRef)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CommonConfig) DeepCopyInto(out *CommonConfig) {
	*out = *in
	if in.TmpPath != nil {
		in, out := &in.TmpPath, &out.TmpPath
		*out = new(string)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.DefaultProfile != nil {
		in, out := &in.DefaultProfile, &out.DefaultProfile
		*out = new(string)
		**out = **in
	}
	if in.FlashDataPath != nil {
		in, out := &in.FlashDataPath, &out.FlashDataPath
		*out = new(string)
		**out = **in
	}
	if in.PathRealtimeMode != nil {
		in, out := &in.PathRealtimeMode, &out.PathRealtimeMode
		*out = new(bool)
		**out = **in
	}
	if in.MarkCacheSize != nil {
		in, out := &in.MarkCacheSize, &out.MarkCacheSize
		*out = new(int64)
		**out = **in
	}
	if in.MinmaxIndexCacheSize != nil {
		in, out := &in.MinmaxIndexCacheSize, &out.MinmaxIndexCacheSize
		*out = new(int64)
		**out = **in
	}
	if in.ListenHost != nil {
		in, out := &in.ListenHost, &out.ListenHost
		*out = new(string)
		**out = **in
	}
	if in.TCPPort != nil {
		in, out := &in.TCPPort, &out.TCPPort
		*out = new(int32)
		**out = **in
	}
	if in.HTTPPort != nil {
		in, out := &in.HTTPPort, &out.HTTPPort
		*out = new(int32)
		**out = **in
	}
	if in.TCPPortSecure != nil {
		in, out := &in.TCPPortSecure, &out.TCPPortSecure
		*out = new(int32)
		**out = **in
	}
	if in.HTTPSPort != nil {
		in, out := &in.HTTPSPort, &out.HTTPSPort
		*out = new(int32)
		**out = **in
	}
	if in.InternalServerHTTPPort != nil {
		in, out := &in.InternalServerHTTPPort, &out.InternalServerHTTPPort
		*out = new(int32)
		**out = **in
	}
	if in.Flash != nil {
		in, out := &in.Flash, &out.Flash
		*out = new(Flash)
		(*in).DeepCopyInto(*out)
	}
	if in.FlashLogger != nil {
		in, out := &in.FlashLogger, &out.FlashLogger
		*out = new(FlashLogger)
		(*in).DeepCopyInto(*out)
	}
	if in.FlashApplication != nil {
		in, out := &in.FlashApplication, &out.FlashApplication
		*out = new(FlashApplication)
		(*in).DeepCopyInto(*out)
	}
	if in.FlashRaft != nil {
		in, out := &in.FlashRaft, &out.FlashRaft
		*out = new(FlashRaft)
		(*in).DeepCopyInto(*out)
	}
	if in.FlashStatus != nil {
		in, out := &in.FlashStatus, &out.FlashStatus
		*out = new(FlashStatus)
		(*in).DeepCopyInto(*out)
	}
	if in.FlashQuota != nil {
		in, out := &in.FlashQuota, &out.FlashQuota
		*out = new(FlashQuota)
		(*in).DeepCopyInto(*out)
	}
	if in.FlashUser != nil {
		in, out := &in.FlashUser, &out.FlashUser
		*out = new(FlashUser)
		(*in).DeepCopyInto(*out)
	}
	if in.FlashProfile != nil {
		in, out := &in.FlashProfile, &out.FlashProfile
		*out = new(FlashProfile)
		(*in).DeepCopyInto(*out)
	}
	if in.Security != nil {
		in, out := &in.Security, &out.Security
		*out = new(FlashSecurity)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CommonConfig.
func (in *CommonConfig) DeepCopy() *CommonConfig {
	if in == nil {
		return nil
	}
	out := new(CommonConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ComponentSpec) DeepCopyInto(out *ComponentSpec) {
	*out = *in
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(string)
		**out = **in
	}
	if in.ImagePullPolicy != nil {
		in, out := &in.ImagePullPolicy, &out.ImagePullPolicy
		*out = new(v1.PullPolicy)
		**out = **in
	}
	if in.ImagePullSecrets != nil {
		in, out := &in.ImagePullSecrets, &out.ImagePullSecrets
		*out = make([]v1.LocalObjectReference, len(*in))
		copy(*out, *in)
	}
	if in.HostNetwork != nil {
		in, out := &in.HostNetwork, &out.HostNetwork
		*out = new(bool)
		**out = **in
	}
	if in.Affinity != nil {
		in, out := &in.Affinity, &out.Affinity
		*out = new(v1.Affinity)
		(*in).DeepCopyInto(*out)
	}
	if in.PriorityClassName != nil {
		in, out := &in.PriorityClassName, &out.PriorityClassName
		*out = new(string)
		**out = **in
	}
	if in.SchedulerName != nil {
		in, out := &in.SchedulerName, &out.SchedulerName
		*out = new(string)
		**out = **in
	}
	if in.NodeSelector != nil {
		in, out := &in.NodeSelector, &out.NodeSelector
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Tolerations != nil {
		in, out := &in.Tolerations, &out.Tolerations
		*out = make([]v1.Toleration, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PodSecurityContext != nil {
		in, out := &in.PodSecurityContext, &out.PodSecurityContext
		*out = new(v1.PodSecurityContext)
		(*in).DeepCopyInto(*out)
	}
	if in.ConfigUpdateStrategy != nil {
		in, out := &in.ConfigUpdateStrategy, &out.ConfigUpdateStrategy
		*out = new(ConfigUpdateStrategy)
		**out = **in
	}
	if in.Env != nil {
		in, out := &in.Env, &out.Env
		*out = make([]v1.EnvVar, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InitContainers != nil {
		in, out := &in.InitContainers, &out.InitContainers
		*out = make([]v1.Container, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AdditionalContainers != nil {
		in, out := &in.AdditionalContainers, &out.AdditionalContainers
		*out = make([]v1.Container, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AdditionalVolumes != nil {
		in, out := &in.AdditionalVolumes, &out.AdditionalVolumes
		*out = make([]v1.Volume, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AdditionalVolumeMounts != nil {
		in, out := &in.AdditionalVolumeMounts, &out.AdditionalVolumeMounts
		*out = make([]v1.VolumeMount, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TerminationGracePeriodSeconds != nil {
		in, out := &in.TerminationGracePeriodSeconds, &out.TerminationGracePeriodSeconds
		*out = new(int64)
		**out = **in
	}
	if in.TopologySpreadConstraints != nil {
		in, out := &in.TopologySpreadConstraints, &out.TopologySpreadConstraints
		*out = make([]TopologySpreadConstraint, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ComponentSpec.
func (in *ComponentSpec) DeepCopy() *ComponentSpec {
	if in == nil {
		return nil
	}
	out := new(ComponentSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigMapRef) DeepCopyInto(out *ConfigMapRef) {
	*out = *in
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigMapRef.
func (in *ConfigMapRef) DeepCopy() *ConfigMapRef {
	if in == nil {
		return nil
	}
	out := new(ConfigMapRef)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CoprocessorCache) DeepCopyInto(out *CoprocessorCache) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.CapacityMB != nil {
		in, out := &in.CapacityMB, &out.CapacityMB
		*out = new(float64)
		**out = **in
	}
	if in.AdmissionMaxResultMB != nil {
		in, out := &in.AdmissionMaxResultMB, &out.AdmissionMaxResultMB
		*out = new(float64)
		**out = **in
	}
	if in.AdmissionMinProcessMs != nil {
		in, out := &in.AdmissionMinProcessMs, &out.AdmissionMinProcessMs
		*out = new(uint64)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CoprocessorCache.
func (in *CoprocessorCache) DeepCopy() *CoprocessorCache {
	if in == nil {
		return nil
	}
	out := new(CoprocessorCache)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CrdKind) DeepCopyInto(out *CrdKind) {
	*out = *in
	if in.ShortNames != nil {
		in, out := &in.ShortNames, &out.ShortNames
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.AdditionalPrinterColums != nil {
		in, out := &in.AdditionalPrinterColums, &out.AdditionalPrinterColums
		*out = make([]v1beta1.CustomResourceColumnDefinition, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CrdKind.
func (in *CrdKind) DeepCopy() *CrdKind {
	if in == nil {
		return nil
	}
	out := new(CrdKind)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CrdKinds) DeepCopyInto(out *CrdKinds) {
	*out = *in
	in.TiDBCluster.DeepCopyInto(&out.TiDBCluster)
	in.DMCluster.DeepCopyInto(&out.DMCluster)
	in.Backup.DeepCopyInto(&out.Backup)
	in.Restore.DeepCopyInto(&out.Restore)
	in.BackupSchedule.DeepCopyInto(&out.BackupSchedule)
	in.TiDBMonitor.DeepCopyInto(&out.TiDBMonitor)
	in.TiDBInitializer.DeepCopyInto(&out.TiDBInitializer)
	in.TidbClusterAutoScaler.DeepCopyInto(&out.TidbClusterAutoScaler)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CrdKinds.
func (in *CrdKinds) DeepCopy() *CrdKinds {
	if in == nil {
		return nil
	}
	out := new(CrdKinds)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DMCluster) DeepCopyInto(out *DMCluster) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DMCluster.
func (in *DMCluster) DeepCopy() *DMCluster {
	if in == nil {
		return nil
	}
	out := new(DMCluster)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DMCluster) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DMClusterCondition) DeepCopyInto(out *DMClusterCondition) {
	*out = *in
	in.LastUpdateTime.DeepCopyInto(&out.LastUpdateTime)
	in.LastTransitionTime.DeepCopyInto(&out.LastTransitionTime)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DMClusterCondition.
func (in *DMClusterCondition) DeepCopy() *DMClusterCondition {
	if in == nil {
		return nil
	}
	out := new(DMClusterCondition)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DMClusterList) DeepCopyInto(out *DMClusterList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]DMCluster, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DMClusterList.
func (in *DMClusterList) DeepCopy() *DMClusterList {
	if in == nil {
		return nil
	}
	out := new(DMClusterList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DMClusterList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DMClusterSpec) DeepCopyInto(out *DMClusterSpec) {
	*out = *in
	in.Discovery.DeepCopyInto(&out.Discovery)
	in.Master.DeepCopyInto(&out.Master)
	if in.Worker != nil {
		in, out := &in.Worker, &out.Worker
		*out = new(WorkerSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.PVReclaimPolicy != nil {
		in, out := &in.PVReclaimPolicy, &out.PVReclaimPolicy
		*out = new(v1.PersistentVolumeReclaimPolicy)
		**out = **in
	}
	if in.ImagePullSecrets != nil {
		in, out := &in.ImagePullSecrets, &out.ImagePullSecrets
		*out = make([]v1.LocalObjectReference, len(*in))
		copy(*out, *in)
	}
	if in.EnablePVReclaim != nil {
		in, out := &in.EnablePVReclaim, &out.EnablePVReclaim
		*out = new(bool)
		**out = **in
	}
	if in.TLSCluster != nil {
		in, out := &in.TLSCluster, &out.TLSCluster
		*out = new(TLSCluster)
		**out = **in
	}
	if in.TLSClientSecretNames != nil {
		in, out := &in.TLSClientSecretNames, &out.TLSClientSecretNames
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.HostNetwork != nil {
		in, out := &in.HostNetwork, &out.HostNetwork
		*out = new(bool)
		**out = **in
	}
	if in.Affinity != nil {
		in, out := &in.Affinity, &out.Affinity
		*out = new(v1.Affinity)
		(*in).DeepCopyInto(*out)
	}
	if in.PriorityClassName != nil {
		in, out := &in.PriorityClassName, &out.PriorityClassName
		*out = new(string)
		**out = **in
	}
	if in.NodeSelector != nil {
		in, out := &in.NodeSelector, &out.NodeSelector
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Tolerations != nil {
		in, out := &in.Tolerations, &out.Tolerations
		*out = make([]v1.Toleration, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PodSecurityContext != nil {
		in, out := &in.PodSecurityContext, &out.PodSecurityContext
		*out = new(v1.PodSecurityContext)
		(*in).DeepCopyInto(*out)
	}
	if in.TopologySpreadConstraints != nil {
		in, out := &in.TopologySpreadConstraints, &out.TopologySpreadConstraints
		*out = make([]TopologySpreadConstraint, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DMClusterSpec.
func (in *DMClusterSpec) DeepCopy() *DMClusterSpec {
	if in == nil {
		return nil
	}
	out := new(DMClusterSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DMClusterStatus) DeepCopyInto(out *DMClusterStatus) {
	*out = *in
	in.Master.DeepCopyInto(&out.Master)
	in.Worker.DeepCopyInto(&out.Worker)
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]DMClusterCondition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DMClusterStatus.
func (in *DMClusterStatus) DeepCopy() *DMClusterStatus {
	if in == nil {
		return nil
	}
	out := new(DMClusterStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DMDiscoverySpec) DeepCopyInto(out *DMDiscoverySpec) {
	*out = *in
	in.ResourceRequirements.DeepCopyInto(&out.ResourceRequirements)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DMDiscoverySpec.
func (in *DMDiscoverySpec) DeepCopy() *DMDiscoverySpec {
	if in == nil {
		return nil
	}
	out := new(DMDiscoverySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DMMonitorSpec) DeepCopyInto(out *DMMonitorSpec) {
	*out = *in
	if in.Clusters != nil {
		in, out := &in.Clusters, &out.Clusters
		*out = make([]ClusterRef, len(*in))
		copy(*out, *in)
	}
	in.Initializer.DeepCopyInto(&out.Initializer)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DMMonitorSpec.
func (in *DMMonitorSpec) DeepCopy() *DMMonitorSpec {
	if in == nil {
		return nil
	}
	out := new(DMMonitorSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DMSecurityConfig) DeepCopyInto(out *DMSecurityConfig) {
	*out = *in
	if in.SSLCA != nil {
		in, out := &in.SSLCA, &out.SSLCA
		*out = new(string)
		**out = **in
	}
	if in.SSLCert != nil {
		in, out := &in.SSLCert, &out.SSLCert
		*out = new(string)
		**out = **in
	}
	if in.SSLKey != nil {
		in, out := &in.SSLKey, &out.SSLKey
		*out = new(string)
		**out = **in
	}
	if in.CertAllowedCN != nil {
		in, out := &in.CertAllowedCN, &out.CertAllowedCN
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DMSecurityConfig.
func (in *DMSecurityConfig) DeepCopy() *DMSecurityConfig {
	if in == nil {
		return nil
	}
	out := new(DMSecurityConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DashboardConfig) DeepCopyInto(out *DashboardConfig) {
	*out = *in
	if in.TiDBCAPath != nil {
		in, out := &in.TiDBCAPath, &out.TiDBCAPath
		*out = new(string)
		**out = **in
	}
	if in.TiDBCertPath != nil {
		in, out := &in.TiDBCertPath, &out.TiDBCertPath
		*out = new(string)
		**out = **in
	}
	if in.TiDBKeyPath != nil {
		in, out := &in.TiDBKeyPath, &out.TiDBKeyPath
		*out = new(string)
		**out = **in
	}
	if in.PublicPathPrefix != nil {
		in, out := &in.PublicPathPrefix, &out.PublicPathPrefix
		*out = new(string)
		**out = **in
	}
	if in.InternalProxy != nil {
		in, out := &in.InternalProxy, &out.InternalProxy
		*out = new(bool)
		**out = **in
	}
	if in.DisableTelemetry != nil {
		in, out := &in.DisableTelemetry, &out.DisableTelemetry
		*out = new(bool)
		**out = **in
	}
	if in.EnableTelemetry != nil {
		in, out := &in.EnableTelemetry, &out.EnableTelemetry
		*out = new(bool)
		**out = **in
	}
	if in.EnableExperimental != nil {
		in, out := &in.EnableExperimental, &out.EnableExperimental
		*out = new(bool)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DashboardConfig.
func (in *DashboardConfig) DeepCopy() *DashboardConfig {
	if in == nil {
		return nil
	}
	out := new(DashboardConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataResource) DeepCopyInto(out *DataResource) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	if in.Data != nil {
		in, out := &in.Data, &out.Data
		*out = make([]byte, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataResource.
func (in *DataResource) DeepCopy() *DataResource {
	if in == nil {
		return nil
	}
	out := new(DataResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DataResource) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataResourceList) DeepCopyInto(out *DataResourceList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]DataResource, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataResourceList.
func (in *DataResourceList) DeepCopy() *DataResourceList {
	if in == nil {
		return nil
	}
	out := new(DataResourceList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DataResourceList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DeploymentStorageStatus) DeepCopyInto(out *DeploymentStorageStatus) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DeploymentStorageStatus.
func (in *DeploymentStorageStatus) DeepCopy() *DeploymentStorageStatus {
	if in == nil {
		return nil
	}
	out := new(DeploymentStorageStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DiscoverySpec) DeepCopyInto(out *DiscoverySpec) {
	*out = *in
	in.ResourceRequirements.DeepCopyInto(&out.ResourceRequirements)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DiscoverySpec.
func (in *DiscoverySpec) DeepCopy() *DiscoverySpec {
	if in == nil {
		return nil
	}
	out := new(DiscoverySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DumplingConfig) DeepCopyInto(out *DumplingConfig) {
	*out = *in
	if in.Options != nil {
		in, out := &in.Options, &out.Options
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.TableFilter != nil {
		in, out := &in.TableFilter, &out.TableFilter
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DumplingConfig.
func (in *DumplingConfig) DeepCopy() *DumplingConfig {
	if in == nil {
		return nil
	}
	out := new(DumplingConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Experimental) DeepCopyInto(out *Experimental) {
	*out = *in
	if in.AllowAutoRandom != nil {
		in, out := &in.AllowAutoRandom, &out.AllowAutoRandom
		*out = new(bool)
		**out = **in
	}
	if in.AllowsExpressionIndex != nil {
		in, out := &in.AllowsExpressionIndex, &out.AllowsExpressionIndex
		*out = new(bool)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Experimental.
func (in *Experimental) DeepCopy() *Experimental {
	if in == nil {
		return nil
	}
	out := new(Experimental)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExternalConfig) DeepCopyInto(out *ExternalConfig) {
	*out = *in
	in.Endpoint.DeepCopyInto(&out.Endpoint)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExternalConfig.
func (in *ExternalConfig) DeepCopy() *ExternalConfig {
	if in == nil {
		return nil
	}
	out := new(ExternalConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExternalEndpoint) DeepCopyInto(out *ExternalEndpoint) {
	*out = *in
	if in.TLSSecret != nil {
		in, out := &in.TLSSecret, &out.TLSSecret
		*out = new(SecretRef)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExternalEndpoint.
func (in *ExternalEndpoint) DeepCopy() *ExternalEndpoint {
	if in == nil {
		return nil
	}
	out := new(ExternalEndpoint)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FileLogConfig) DeepCopyInto(out *FileLogConfig) {
	*out = *in
	if in.Filename != nil {
		in, out := &in.Filename, &out.Filename
		*out = new(string)
		**out = **in
	}
	if in.LogRotate != nil {
		in, out := &in.LogRotate, &out.LogRotate
		*out = new(bool)
		**out = **in
	}
	if in.MaxSize != nil {
		in, out := &in.MaxSize, &out.MaxSize
		*out = new(int)
		**out = **in
	}
	if in.MaxDays != nil {
		in, out := &in.MaxDays, &out.MaxDays
		*out = new(int)
		**out = **in
	}
	if in.MaxBackups != nil {
		in, out := &in.MaxBackups, &out.MaxBackups
		*out = new(int)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FileLogConfig.
func (in *FileLogConfig) DeepCopy() *FileLogConfig {
	if in == nil {
		return nil
	}
	out := new(FileLogConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Flash) DeepCopyInto(out *Flash) {
	*out = *in
	if in.TiDBStatusAddr != nil {
		in, out := &in.TiDBStatusAddr, &out.TiDBStatusAddr
		*out = new(string)
		**out = **in
	}
	if in.ServiceAddr != nil {
		in, out := &in.ServiceAddr, &out.ServiceAddr
		*out = new(string)
		**out = **in
	}
	if in.OverlapThreshold != nil {
		in, out := &in.OverlapThreshold, &out.OverlapThreshold
		*out = new(float64)
		**out = **in
	}
	if in.CompactLogMinPeriod != nil {
		in, out := &in.CompactLogMinPeriod, &out.CompactLogMinPeriod
		*out = new(int32)
		**out = **in
	}
	if in.FlashCluster != nil {
		in, out := &in.FlashCluster, &out.FlashCluster
		*out = new(FlashCluster)
		(*in).DeepCopyInto(*out)
	}
	if in.FlashProxy != nil {
		in, out := &in.FlashProxy, &out.FlashProxy
		*out = new(FlashProxy)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Flash.
func (in *Flash) DeepCopy() *Flash {
	if in == nil {
		return nil
	}
	out := new(Flash)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FlashApplication) DeepCopyInto(out *FlashApplication) {
	*out = *in
	if in.RunAsDaemon != nil {
		in, out := &in.RunAsDaemon, &out.RunAsDaemon
		*out = new(bool)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FlashApplication.
func (in *FlashApplication) DeepCopy() *FlashApplication {
	if in == nil {
		return nil
	}
	out := new(FlashApplication)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FlashCluster) DeepCopyInto(out *FlashCluster) {
	*out = *in
	if in.ClusterManagerPath != nil {
		in, out := &in.ClusterManagerPath, &out.ClusterManagerPath
		*out = new(string)
		**out = **in
	}
	if in.ClusterLog != nil {
		in, out := &in.ClusterLog, &out.ClusterLog
		*out = new(string)
		**out = **in
	}
	if in.RefreshInterval != nil {
		in, out := &in.RefreshInterval, &out.RefreshInterval
		*out = new(int32)
		**out = **in
	}
	if in.UpdateRuleInterval != nil {
		in, out := &in.UpdateRuleInterval, &out.UpdateRuleInterval
		*out = new(int32)
		**out = **in
	}
	if in.MasterTTL != nil {
		in, out := &in.MasterTTL, &out.MasterTTL
		*out = new(int32)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FlashCluster.
func (in *FlashCluster) DeepCopy() *FlashCluster {
	if in == nil {
		return nil
	}
	out := new(FlashCluster)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FlashLogger) DeepCopyInto(out *FlashLogger) {
	*out = *in
	if in.ErrorLog != nil {
		in, out := &in.ErrorLog, &out.ErrorLog
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.ServerLog != nil {
		in, out := &in.ServerLog, &out.ServerLog
		*out = new(string)
		**out = **in
	}
	if in.Level != nil {
		in, out := &in.Level, &out.Level
		*out = new(string)
		**out = **in
	}
	if in.Count != nil {
		in, out := &in.Count, &out.Count
		*out = new(int32)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FlashLogger.
func (in *FlashLogger) DeepCopy() *FlashLogger {
	if in == nil {
		return nil
	}
	out := new(FlashLogger)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FlashProfile) DeepCopyInto(out *FlashProfile) {
	*out = *in
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(Profile)
		(*in).DeepCopyInto(*out)
	}
	if in.Default != nil {
		in, out := &in.Default, &out.Default
		*out = new(Profile)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FlashProfile.
func (in *FlashProfile) DeepCopy() *FlashProfile {
	if in == nil {
		return nil
	}
	out := new(FlashProfile)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FlashProxy) DeepCopyInto(out *FlashProxy) {
	*out = *in
	if in.Addr != nil {
		in, out := &in.Addr, &out.Addr
		*out = new(string)
		**out = **in
	}
	if in.AdvertiseAddr != nil {
		in, out := &in.AdvertiseAddr, &out.AdvertiseAddr
		*out = new(string)
		**out = **in
	}
	if in.DataDir != nil {
		in, out := &in.DataDir, &out.DataDir
		*out = new(string)
		**out = **in
	}
	if in.Config != nil {
		in, out := &in.Config, &out.Config
		*out = new(string)
		**out = **in
	}
	if in.LogFile != nil {
		in, out := &in.LogFile, &out.LogFile
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FlashProxy.
func (in *FlashProxy) DeepCopy() *FlashProxy {
	if in == nil {
		return nil
	}
	out := new(FlashProxy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FlashQuota) DeepCopyInto(out *FlashQuota) {
	*out = *in
	if in.Default != nil {
		in, out := &in.Default, &out.Default
		*out = new(Quota)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FlashQuota.
func (in *FlashQuota) DeepCopy() *FlashQuota {
	if in == nil {
		return nil
	}
	out := new(FlashQuota)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FlashRaft) DeepCopyInto(out *FlashRaft) {
	*out = *in
	if in.PDAddr != nil {
		in, out := &in.PDAddr, &out.PDAddr
		*out = new(string)
		**out = **in
	}
	if in.KVStorePath != nil {
		in, out := &in.KVStorePath, &out.KVStorePath
		*out = new(string)
		**out = **in
	}
	if in.StorageEngine != nil {
		in, out := &in.StorageEngine, &out.StorageEngine
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FlashRaft.
func (in *FlashRaft) DeepCopy() *FlashRaft {
	if in == nil {
		return nil
	}
	out := new(FlashRaft)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FlashSecurity) DeepCopyInto(out *FlashSecurity) {
	*out = *in
	if in.CAPath != nil {
		in, out := &in.CAPath, &out.CAPath
		*out = new(string)
		**out = **in
	}
	if in.CertPath != nil {
		in, out := &in.CertPath, &out.CertPath
		*out = new(string)
		**out = **in
	}
	if in.KeyPath != nil {
		in, out := &in.KeyPath, &out.KeyPath
		*out = new(string)
		**out = **in
	}
	if in.CertAllowedCN != nil {
		in, out := &in.CertAllowedCN, &out.CertAllowedCN
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FlashSecurity.
func (in *FlashSecurity) DeepCopy() *FlashSecurity {
	if in == nil {
		return nil
	}
	out := new(FlashSecurity)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FlashServerConfig) DeepCopyInto(out *FlashServerConfig) {
	*out = *in
	if in.EngineAddr != nil {
		in, out := &in.EngineAddr, &out.EngineAddr
		*out = new(string)
		**out = **in
	}
	if in.StatusAddr != nil {
		in, out := &in.StatusAddr, &out.StatusAddr
		*out = new(string)
		**out = **in
	}
	if in.AdvertiseStatusAddr != nil {
		in, out := &in.AdvertiseStatusAddr, &out.AdvertiseStatusAddr
		*out = new(string)
		**out = **in
	}
	in.TiKVServerConfig.DeepCopyInto(&out.TiKVServerConfig)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FlashServerConfig.
func (in *FlashServerConfig) DeepCopy() *FlashServerConfig {
	if in == nil {
		return nil
	}
	out := new(FlashServerConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FlashStatus) DeepCopyInto(out *FlashStatus) {
	*out = *in
	if in.MetricsPort != nil {
		in, out := &in.MetricsPort, &out.MetricsPort
		*out = new(int32)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FlashStatus.
func (in *FlashStatus) DeepCopy() *FlashStatus {
	if in == nil {
		return nil
	}
	out := new(FlashStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FlashUser) DeepCopyInto(out *FlashUser) {
	*out = *in
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(User)
		(*in).DeepCopyInto(*out)
	}
	if in.Default != nil {
		in, out := &in.Default, &out.Default
		*out = new(User)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FlashUser.
func (in *FlashUser) DeepCopy() *FlashUser {
	if in == nil {
		return nil
	}
	out := new(FlashUser)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GcsStorageProvider) DeepCopyInto(out *GcsStorageProvider) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GcsStorageProvider.
func (in *GcsStorageProvider) DeepCopy() *GcsStorageProvider {
	if in == nil {
		return nil
	}
	out := new(GcsStorageProvider)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GrafanaSpec) DeepCopyInto(out *GrafanaSpec) {
	*out = *in
	in.MonitorContainer.DeepCopyInto(&out.MonitorContainer)
	in.Service.DeepCopyInto(&out.Service)
	if in.Envs != nil {
		in, out := &in.Envs, &out.Envs
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Ingress != nil {
		in, out := &in.Ingress, &out.Ingress
		*out = new(IngressSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.AdditionalVolumeMounts != nil {
		in, out := &in.AdditionalVolumeMounts, &out.AdditionalVolumeMounts
		*out = make([]v1.VolumeMount, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GrafanaSpec.
func (in *GrafanaSpec) DeepCopy() *GrafanaSpec {
	if in == nil {
		return nil
	}
	out := new(GrafanaSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HelperSpec) DeepCopyInto(out *HelperSpec) {
	*out = *in
	if in.Image != nil {
		in, out := &in.Image, &out.Image
		*out = new(string)
		**out = **in
	}
	if in.ImagePullPolicy != nil {
		in, out := &in.ImagePullPolicy, &out.ImagePullPolicy
		*out = new(v1.PullPolicy)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HelperSpec.
func (in *HelperSpec) DeepCopy() *HelperSpec {
	if in == nil {
		return nil
	}
	out := new(HelperSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IngressSpec) DeepCopyInto(out *IngressSpec) {
	*out = *in
	if in.Hosts != nil {
		in, out := &in.Hosts, &out.Hosts
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.TLS != nil {
		in, out := &in.TLS, &out.TLS
		*out = make([]extensionsv1beta1.IngressTLS, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IngressSpec.
func (in *IngressSpec) DeepCopy() *IngressSpec {
	if in == nil {
		return nil
	}
	out := new(IngressSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InitializerSpec) DeepCopyInto(out *InitializerSpec) {
	*out = *in
	in.MonitorContainer.DeepCopyInto(&out.MonitorContainer)
	if in.Envs != nil {
		in, out := &in.Envs, &out.Envs
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InitializerSpec.
func (in *InitializerSpec) DeepCopy() *InitializerSpec {
	if in == nil {
		return nil
	}
	out := new(InitializerSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Interval) DeepCopyInto(out *Interval) {
	*out = *in
	if in.Duration != nil {
		in, out := &in.Duration, &out.Duration
		*out = new(int32)
		**out = **in
	}
	if in.Queries != nil {
		in, out := &in.Queries, &out.Queries
		*out = new(int32)
		**out = **in
	}
	if in.Errors != nil {
		in, out := &in.Errors, &out.Errors
		*out = new(int32)
		**out = **in
	}
	if in.ResultRows != nil {
		in, out := &in.ResultRows, &out.ResultRows
		*out = new(int32)
		**out = **in
	}
	if in.ReadRows != nil {
		in, out := &in.ReadRows, &out.ReadRows
		*out = new(int32)
		**out = **in
	}
	if in.ExecutionTime != nil {
		in, out := &in.ExecutionTime, &out.ExecutionTime
		*out = new(int32)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Interval.
func (in *Interval) DeepCopy() *Interval {
	if in == nil {
		return nil
	}
	out := new(Interval)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IsolationRead) DeepCopyInto(out *IsolationRead) {
	*out = *in
	if in.Engines != nil {
		in, out := &in.Engines, &out.Engines
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IsolationRead.
func (in *IsolationRead) DeepCopy() *IsolationRead {
	if in == nil {
		return nil
	}
	out := new(IsolationRead)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LocalStorageProvider) DeepCopyInto(out *LocalStorageProvider) {
	*out = *in
	in.Volume.DeepCopyInto(&out.Volume)
	in.VolumeMount.DeepCopyInto(&out.VolumeMount)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LocalStorageProvider.
func (in *LocalStorageProvider) DeepCopy() *LocalStorageProvider {
	if in == nil {
		return nil
	}
	out := new(LocalStorageProvider)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Log) DeepCopyInto(out *Log) {
	*out = *in
	if in.Level != nil {
		in, out := &in.Level, &out.Level
		*out = new(string)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.DisableTimestamp != nil {
		in, out := &in.DisableTimestamp, &out.DisableTimestamp
		*out = new(bool)
		**out = **in
	}
	if in.EnableTimestamp != nil {
		in, out := &in.EnableTimestamp, &out.EnableTimestamp
		*out = new(bool)
		**out = **in
	}
	if in.EnableErrorStack != nil {
		in, out := &in.EnableErrorStack, &out.EnableErrorStack
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(FileLogConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.EnableSlowLog != nil {
		in, out := &in.EnableSlowLog, &out.EnableSlowLog
		*out = new(bool)
		**out = **in
	}
	if in.SlowQueryFile != nil {
		in, out := &in.SlowQueryFile, &out.SlowQueryFile
		*out = new(string)
		**out = **in
	}
	if in.SlowThreshold != nil {
		in, out := &in.SlowThreshold, &out.SlowThreshold
		*out = new(uint64)
		**out = **in
	}
	if in.ExpensiveThreshold != nil {
		in, out := &in.ExpensiveThreshold, &out.ExpensiveThreshold
		*out = new(uint)
		**out = **in
	}
	if in.QueryLogMaxLen != nil {
		in, out := &in.QueryLogMaxLen, &out.QueryLogMaxLen
		*out = new(uint64)
		**out = **in
	}
	if in.RecordPlanInSlowLog != nil {
		in, out := &in.RecordPlanInSlowLog, &out.RecordPlanInSlowLog
		*out = new(uint32)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Log.
func (in *Log) DeepCopy() *Log {
	if in == nil {
		return nil
	}
	out := new(Log)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LogTailerSpec) DeepCopyInto(out *LogTailerSpec) {
	*out = *in
	in.ResourceRequirements.DeepCopyInto(&out.ResourceRequirements)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LogTailerSpec.
func (in *LogTailerSpec) DeepCopy() *LogTailerSpec {
	if in == nil {
		return nil
	}
	out := new(LogTailerSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MasterConfig) DeepCopyInto(out *MasterConfig) {
	*out = *in
	if in.LogLevel != nil {
		in, out := &in.LogLevel, &out.LogLevel
		*out = new(string)
		**out = **in
	}
	if in.LogFile != nil {
		in, out := &in.LogFile, &out.LogFile
		*out = new(string)
		**out = **in
	}
	if in.LogFormat != nil {
		in, out := &in.LogFormat, &out.LogFormat
		*out = new(string)
		**out = **in
	}
	if in.RPCTimeoutStr != nil {
		in, out := &in.RPCTimeoutStr, &out.RPCTimeoutStr
		*out = new(string)
		**out = **in
	}
	if in.RPCRateLimit != nil {
		in, out := &in.RPCRateLimit, &out.RPCRateLimit
		*out = new(float64)
		**out = **in
	}
	if in.RPCRateBurst != nil {
		in, out := &in.RPCRateBurst, &out.RPCRateBurst
		*out = new(int)
		**out = **in
	}
	in.DMSecurityConfig.DeepCopyInto(&out.DMSecurityConfig)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MasterConfig.
func (in *MasterConfig) DeepCopy() *MasterConfig {
	if in == nil {
		return nil
	}
	out := new(MasterConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MasterFailureMember) DeepCopyInto(out *MasterFailureMember) {
	*out = *in
	in.CreatedAt.DeepCopyInto(&out.CreatedAt)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MasterFailureMember.
func (in *MasterFailureMember) DeepCopy() *MasterFailureMember {
	if in == nil {
		return nil
	}
	out := new(MasterFailureMember)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MasterKeyFileConfig) DeepCopyInto(out *MasterKeyFileConfig) {
	*out = *in
	if in.Method != nil {
		in, out := &in.Method, &out.Method
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MasterKeyFileConfig.
func (in *MasterKeyFileConfig) DeepCopy() *MasterKeyFileConfig {
	if in == nil {
		return nil
	}
	out := new(MasterKeyFileConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MasterKeyKMSConfig) DeepCopyInto(out *MasterKeyKMSConfig) {
	*out = *in
	if in.KeyID != nil {
		in, out := &in.KeyID, &out.KeyID
		*out = new(string)
		**out = **in
	}
	if in.AccessKey != nil {
		in, out := &in.AccessKey, &out.AccessKey
		*out = new(string)
		**out = **in
	}
	if in.SecretKey != nil {
		in, out := &in.SecretKey, &out.SecretKey
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.Endpoint != nil {
		in, out := &in.Endpoint, &out.Endpoint
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MasterKeyKMSConfig.
func (in *MasterKeyKMSConfig) DeepCopy() *MasterKeyKMSConfig {
	if in == nil {
		return nil
	}
	out := new(MasterKeyKMSConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MasterMember) DeepCopyInto(out *MasterMember) {
	*out = *in
	in.LastTransitionTime.DeepCopyInto(&out.LastTransitionTime)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MasterMember.
func (in *MasterMember) DeepCopy() *MasterMember {
	if in == nil {
		return nil
	}
	out := new(MasterMember)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MasterServiceSpec) DeepCopyInto(out *MasterServiceSpec) {
	*out = *in
	in.ServiceSpec.DeepCopyInto(&out.ServiceSpec)
	if in.ExternalTrafficPolicy != nil {
		in, out := &in.ExternalTrafficPolicy, &out.ExternalTrafficPolicy
		*out = new(v1.ServiceExternalTrafficPolicyType)
		**out = **in
	}
	if in.MasterNodePort != nil {
		in, out := &in.MasterNodePort, &out.MasterNodePort
		*out = new(int)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MasterServiceSpec.
func (in *MasterServiceSpec) DeepCopy() *MasterServiceSpec {
	if in == nil {
		return nil
	}
	out := new(MasterServiceSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MasterSpec) DeepCopyInto(out *MasterSpec) {
	*out = *in
	in.ComponentSpec.DeepCopyInto(&out.ComponentSpec)
	in.ResourceRequirements.DeepCopyInto(&out.ResourceRequirements)
	if in.Service != nil {
		in, out := &in.Service, &out.Service
		*out = new(MasterServiceSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.MaxFailoverCount != nil {
		in, out := &in.MaxFailoverCount, &out.MaxFailoverCount
		*out = new(int32)
		**out = **in
	}
	if in.StorageClassName != nil {
		in, out := &in.StorageClassName, &out.StorageClassName
		*out = new(string)
		**out = **in
	}
	if in.Config != nil {
		in, out := &in.Config, &out.Config
		*out = new(MasterConfig)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MasterSpec.
func (in *MasterSpec) DeepCopy() *MasterSpec {
	if in == nil {
		return nil
	}
	out := new(MasterSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MasterStatus) DeepCopyInto(out *MasterStatus) {
	*out = *in
	if in.StatefulSet != nil {
		in, out := &in.StatefulSet, &out.StatefulSet
		*out = new(appsv1.StatefulSetStatus)
		(*in).DeepCopyInto(*out)
	}
	if in.Members != nil {
		in, out := &in.Members, &out.Members
		*out = make(map[string]MasterMember, len(*in))
		for key, val := range *in {
			(*out)[key] = *val.DeepCopy()
		}
	}
	in.Leader.DeepCopyInto(&out.Leader)
	if in.FailureMembers != nil {
		in, out := &in.FailureMembers, &out.FailureMembers
		*out = make(map[string]MasterFailureMember, len(*in))
		for key, val := range *in {
			(*out)[key] = *val.DeepCopy()
		}
	}
	if in.UnjoinedMembers != nil {
		in, out := &in.UnjoinedMembers, &out.UnjoinedMembers
		*out = make(map[string]UnjoinedMember, len(*in))
		for key, val := range *in {
			(*out)[key] = *val.DeepCopy()
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MasterStatus.
func (in *MasterStatus) DeepCopy() *MasterStatus {
	if in == nil {
		return nil
	}
	out := new(MasterStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitorContainer) DeepCopyInto(out *MonitorContainer) {
	*out = *in
	in.ResourceRequirements.DeepCopyInto(&out.ResourceRequirements)
	if in.ImagePullPolicy != nil {
		in, out := &in.ImagePullPolicy, &out.ImagePullPolicy
		*out = new(v1.PullPolicy)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitorContainer.
func (in *MonitorContainer) DeepCopy() *MonitorContainer {
	if in == nil {
		return nil
	}
	out := new(MonitorContainer)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Networks) DeepCopyInto(out *Networks) {
	*out = *in
	if in.IP != nil {
		in, out := &in.IP, &out.IP
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Networks.
func (in *Networks) DeepCopy() *Networks {
	if in == nil {
		return nil
	}
	out := new(Networks)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OpenTracing) DeepCopyInto(out *OpenTracing) {
	*out = *in
	if in.Enable != nil {
		in, out := &in.Enable, &out.Enable
		*out = new(bool)
		**out = **in
	}
	if in.Sampler != nil {
		in, out := &in.Sampler, &out.Sampler
		*out = new(OpenTracingSampler)
		(*in).DeepCopyInto(*out)
	}
	if in.Reporter != nil {
		in, out := &in.Reporter, &out.Reporter
		*out = new(OpenTracingReporter)
		(*in).DeepCopyInto(*out)
	}
	if in.RPCMetrics != nil {
		in, out := &in.RPCMetrics, &out.RPCMetrics
		*out = new(bool)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OpenTracing.
func (in *OpenTracing) DeepCopy() *OpenTracing {
	if in == nil {
		return nil
	}
	out := new(OpenTracing)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OpenTracingReporter) DeepCopyInto(out *OpenTracingReporter) {
	*out = *in
	if in.QueueSize != nil {
		in, out := &in.QueueSize, &out.QueueSize
		*out = new(int)
		**out = **in
	}
	if in.BufferFlushInterval != nil {
		in, out := &in.BufferFlushInterval, &out.BufferFlushInterval
		*out = new(time.Duration)
		**out = **in
	}
	if in.LogSpans != nil {
		in, out := &in.LogSpans, &out.LogSpans
		*out = new(bool)
		**out = **in
	}
	if in.LocalAgentHostPort != nil {
		in, out := &in.LocalAgentHostPort, &out.LocalAgentHostPort
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OpenTracingReporter.
func (in *OpenTracingReporter) DeepCopy() *OpenTracingReporter {
	if in == nil {
		return nil
	}
	out := new(OpenTracingReporter)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OpenTracingSampler) DeepCopyInto(out *OpenTracingSampler) {
	*out = *in
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.Param != nil {
		in, out := &in.Param, &out.Param
		*out = new(float64)
		**out = **in
	}
	if in.SamplingServerURL != nil {
		in, out := &in.SamplingServerURL, &out.SamplingServerURL
		*out = new(string)
		**out = **in
	}
	if in.MaxOperations != nil {
		in, out := &in.MaxOperations, &out.MaxOperations
		*out = new(int)
		**out = **in
	}
	if in.SamplingRefreshInterval != nil {
		in, out := &in.SamplingRefreshInterval, &out.SamplingRefreshInterval
		*out = new(time.Duration)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OpenTracingSampler.
func (in *OpenTracingSampler) DeepCopy() *OpenTracingSampler {
	if in == nil {
		return nil
	}
	out := new(OpenTracingSampler)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PDConfig) DeepCopyInto(out *PDConfig) {
	*out = *in
	if in.ForceNewCluster != nil {
		in, out := &in.ForceNewCluster, &out.ForceNewCluster
		*out = new(bool)
		**out = **in
	}
	if in.EnableGRPCGateway != nil {
		in, out := &in.EnableGRPCGateway, &out.EnableGRPCGateway
		*out = new(bool)
		**out = **in
	}
	if in.InitialClusterToken != nil {
		in, out := &in.InitialClusterToken, &out.InitialClusterToken
		*out = new(string)
		**out = **in
	}
	if in.LeaderLease != nil {
		in, out := &in.LeaderLease, &out.LeaderLease
		*out = new(int64)
		**out = **in
	}
	if in.Log != nil {
		in, out := &in.Log, &out.Log
		*out = new(PDLogConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.LogFileDeprecated != nil {
		in, out := &in.LogFileDeprecated, &out.LogFileDeprecated
		*out = new(string)
		**out = **in
	}
	if in.LogLevelDeprecated != nil {
		in, out := &in.LogLevelDeprecated, &out.LogLevelDeprecated
		*out = new(string)
		**out = **in
	}
	if in.TsoSaveInterval != nil {
		in, out := &in.TsoSaveInterval, &out.TsoSaveInterval
		*out = new(string)
		**out = **in
	}
	if in.Metric != nil {
		in, out := &in.Metric, &out.Metric
		*out = new(PDMetricConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = new(PDScheduleConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.Replication != nil {
		in, out := &in.Replication, &out.Replication
		*out = new(PDReplicationConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = make(map[string]PDNamespaceConfig, len(*in))
		for key, val := range *in {
			(*out)[key] = *val.DeepCopy()
		}
	}
	if in.PDServerCfg != nil {
		in, out := &in.PDServerCfg, &out.PDServerCfg
		*out = new(PDServerConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.ClusterVersion != nil {
		in, out := &in.ClusterVersion, &out.ClusterVersion
		*out = new(string)
		**out = **in
	}
	if in.QuotaBackendBytes != nil {
		in, out := &in.QuotaBackendBytes, &out.QuotaBackendBytes
		*out = new(string)
		**out = **in
	}
	if in.AutoCompactionMode != nil {
		in, out := &in.AutoCompactionMode, &out.AutoCompactionMode
		*out = new(string)
		**out = **in
	}
	if in.AutoCompactionRetention != nil {
		in, out := &in.AutoCompactionRetention, &out.AutoCompactionRetention
		*out = new(string)
		**out = **in
	}
	if in.TickInterval != nil {
		in, out := &in.TickInterval, &out.TickInterval
		*out = new(string)
		**out = **in
	}
	if in.ElectionInterval != nil {
		in, out := &in.ElectionInterval, &out.ElectionInterval
		*out = new(string)
		**out = **in
	}
	if in.PreVote != nil {
		in, out := &in.PreVote, &out.PreVote
		*out = new(bool)
		**out = **in
	}
	if in.Security != nil {
		in, out := &in.Security, &out.Security
		*out = new(PDSecurityConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.LabelProperty != nil {
		in, out := &in.LabelProperty, &out.LabelProperty
		*out = make(PDLabelPropertyConfig, len(*in))
		for key, val := range *in {
			var outVal []PDStoreLabel
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = make(PDStoreLabels, len(*in))
				for i := range *in {
					(*in)[i].DeepCopyInto(&(*out)[i])
				}
			}
			(*out)[key] = outVal
		}
	}
	if in.NamespaceClassifier != nil {
		in, out := &in.NamespaceClassifier, &out.NamespaceClassifier
		*out = new(string)
		**out = **in
	}
	if in.Dashboard != nil {
		in, out := &in.Dashboard, &out.Dashboard
		*out = new(DashboardConfig)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PDConfig.
func (in *PDConfig) DeepCopy() *PDConfig {
	if in == nil {
		return nil
	}
	out := new(PDConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PDConfigWraper) DeepCopyInto(out *PDConfigWraper) {
	*out = *in
	if in.GenericConfig != nil {
		in, out := &in.GenericConfig, &out.GenericConfig
		*out = (*in).DeepCopy()
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PDConfigWraper.
func (in *PDConfigWraper) DeepCopy() *PDConfigWraper {
	if in == nil {
		return nil
	}
	out := new(PDConfigWraper)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PDFailureMember) DeepCopyInto(out *PDFailureMember) {
	*out = *in
	if in.PVCUIDSet != nil {
		in, out := &in.PVCUIDSet, &out.PVCUIDSet
		*out = make(map[types.UID]struct{}, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	in.CreatedAt.DeepCopyInto(&out.CreatedAt)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PDFailureMember.
func (in *PDFailureMember) DeepCopy() *PDFailureMember {
	if in == nil {
		return nil
	}
	out := new(PDFailureMember)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcop