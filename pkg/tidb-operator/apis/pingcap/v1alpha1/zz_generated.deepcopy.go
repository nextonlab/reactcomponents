// +build !ignore_autogenerated

// Copyright PingCAP, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by deepcopy-gen. DO NOT EDIT.

package v1alpha1

import (
	time "time"

	model "github.com/prometheus/common/model"
	appsv1 "k8s.io/api/apps/v1"
	v1 "k8s.io/api/core/v1"
	extensionsv1beta1 "k8s.io/api/extensions/v1beta1"
	v1beta1 "k8s.io/apiextensions-apiserver/pkg/apis/apiextensions/v1beta1"
	runtime "k8s.io/apimachinery/pkg/runtime"
	types "k8s.io/apimachinery/pkg/types"

	binlog "github.com/pingcap/tipocket/pkg/tidb-operator/binlog"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoResource) DeepCopyInto(out *AutoResource) {
	*out = *in
	out.CPU = in.CPU.DeepCopy()
	out.Memory = in.Memory.DeepCopy()
	out.Storage = in.Storage.DeepCopy()
	if in.Count != nil {
		in, out := &in.Count, &out.Count
		*out = new(int32)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoResource.
func (in *AutoResource) DeepCopy() *AutoResource {
	if in == nil {
		return nil
	}
	out := new(AutoResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoRule) DeepCopyInto(out *AutoRule) {
	*out = *in
	if in.MinThreshold != nil {
		in, out := &in.MinThreshold, &out.MinThreshold
		*out = new(float64)
		**out = **in
	}
	if in.ResourceTypes != nil {
		in, out := &in.ResourceTypes, &out.ResourceTypes
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoRule.
func (in *AutoRule) DeepCopy() *AutoRule {
	if in == nil {
		return nil
	}
	out := new(AutoRule)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BRConfig) DeepCopyInto(out *BRConfig) {
	*out = *in
	if in.Concurrency != nil {
		in, out := &in.Concurrency, &out.Concurrency
		*out = new(uint32)
		**out = **in
	}
	if in.RateLimit != nil {
		in, out := &in.RateLimit, &out.RateLimit
		*out = new(uint)
		**out = **in
	}
	if in.Checksum != nil {
		in, out := &in.Checksum, &out.Checksum
		*out = new(bool)
		**out = **in
	}
	if in.SendCredToTikv != nil {
		in, out := &in.SendCredToTikv, &out.SendCredToTikv
		*out = new(bool)
		**out = **in
	}
	if in.OnLine != nil {
		in, out := &in.OnLine, &out.OnLine
		*out = new(bool)
		**out = **in
	}
	if in.Options != nil {
		in, out := &in.Options, &out.Options
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BRConfig.
func (in *BRConfig) DeepCopy() *BRConfig {
	if in == nil {
		return nil
	}
	out := new(BRConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Backup) DeepCopyInto(out *Backup) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Backup.
func (in *Backup) DeepCopy() *Backup {
	if in == nil {
		return nil
	}
	out := new(Backup)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Backup) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackupCondition) DeepCopyInto(out *BackupCondition) {
	*out = *in
	in.LastTransitionTime.DeepCopyInto(&out.LastTransitionTime)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackupCondition.
func (in *BackupCondition) DeepCopy() *BackupCondition {
	if in == nil {
		return nil
	}
	out := new(BackupCondition)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackupList) DeepCopyInto(out *BackupList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Backup, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackupList.
func (in *BackupList) DeepCopy() *BackupList {
	if in == nil {
		return nil
	}
	out := new(BackupList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *BackupList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackupSchedule) DeepCopyInto(out *BackupSchedule) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackupSchedule.
func (in *BackupSchedule) DeepCopy() *BackupSchedule {
	if in == nil {
		return nil
	}
	out := new(BackupSchedule)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *BackupSchedule) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackupScheduleList) DeepCopyInto(out *BackupScheduleList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]BackupSchedule, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackupScheduleList.
func (in *BackupScheduleList) DeepCopy() *BackupScheduleList {
	if in == nil {
		return nil
	}
	out := new(BackupScheduleList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *BackupScheduleList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackupScheduleSpec) DeepCopyInto(out *BackupScheduleSpec) {
	*out = *in
	if in.MaxBackups != nil {
		in, out := &in.MaxBackups, &out.MaxBackups
		*out = new(int32)
		**out = **in
	}
	if in.MaxReservedTime != nil {
		in, out := &in.MaxReservedTime, &out.MaxReservedTime
		*out = new(string)
		**out = **in
	}
	in.BackupTemplate.DeepCopyInto(&out.BackupTemplate)
	if in.StorageClassName != nil {
		in, out := &in.StorageClassName, &out.StorageClassName
		*out = new(string)
		**out = **in
	}
	if in.ImagePullSecrets != nil {
		in, out := &in.ImagePullSecrets, &out.ImagePullSecrets
		*out = make([]v1.LocalObjectReference, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackupScheduleSpec.
func (in *BackupScheduleSpec) DeepCopy() *BackupScheduleSpec {
	if in == nil {
		return nil
	}
	out := new(BackupScheduleSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackupScheduleStatus) DeepCopyInto(out *BackupScheduleStatus) {
	*out = *in
	if in.LastBackupTime != nil {
		in, out := &in.LastBackupTime, &out.LastBackupTime
		*out = (*in).DeepCopy()
	}
	if in.AllBackupCleanTime != nil {
		in, out := &in.AllBackupCleanTime, &out.AllBackupCleanTime
		*out = (*in).DeepCopy()
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackupScheduleStatus.
func (in *BackupScheduleStatus) DeepCopy() *BackupScheduleStatus {
	if in == nil {
		return nil
	}
	out := new(BackupScheduleStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackupSpec) DeepCopyInto(out *BackupSpec) {
	*out = *in
	in.ResourceRequirements.DeepCopyInto(&out.ResourceRequirements)
	if in.Env != nil {
		in, out := &in.Env, &out.Env
		*out = make([]v1.EnvVar, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.From != nil {
		in, out := &in.From, &out.From
		*out = new(TiDBAccessConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.TikvGCLifeTime != nil {
		in, out := &in.TikvGCLifeTime, &out.TikvGCLifeTime
		*out = new(string)
		**out = **in
	}
	in.StorageProvider.DeepCopyInto(&out.StorageProvider)
	if in.StorageClassName != nil {
		in, out := &in.StorageClassName, &out.StorageClassName
		*out = new(string)
		**out = **in
	}
	if in.BR != nil {
		in, out := &in.BR, &out.BR
		*out = new(BRConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.Dumpling != nil {
		in, out := &in.Dumpling, &out.Dumpling
		*out = new(DumplingConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.Tolerations != nil {
		in, out := &in.Tolerations, &out.Tolerations
		*out = make([]v1.Toleration, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ImagePullSecrets != nil {
		in, out := &in.ImagePullSecrets, &out.ImagePullSecrets
		*out = make([]v1.LocalObjectReference, len(*in))
		copy(*out, *in)
	}
	if in.TableFilter != nil {
		in, out := &in.TableFilter, &out.TableFilter
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Affinity != nil {
		in, out := &in.Affinity, &out.Affinity
		*out = new(v1.Affinity)
		(*in).DeepCopyInto(*out)
	}
	if in.PodSecurityContext != nil {
		in, out := &in.PodSecurityContext, &out.PodSecurityContext
		*out = new(v1.PodSecurityContext)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackupSpec.
func (in *BackupSpec) DeepCopy() *BackupSpec {
	if in == nil {
		return nil
	}
	out := new(BackupSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackupStatus) DeepCopyInto(out *BackupStatus) {
	*out = *in
	in.TimeStarted.DeepCopyInto(&out.TimeStarted)
	in.TimeCompleted.DeepCopyInto(&out.TimeCompleted)
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]BackupCondition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackupStatus.
func (in *BackupStatus) DeepCopy() *BackupStatus {
	if in == nil {
		return nil
	}
	out := new(BackupStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BasicAuth) DeepCopyInto(out *BasicAuth) {
	*out = *in
	in.Username.DeepCopyInto(&out.Username)
	in.Password.DeepCopyInto(&out.Password)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BasicAuth.
func (in *BasicAuth) DeepCopy() *BasicAuth {
	if in == nil {
		return nil
	}
	out := new(BasicAuth)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BasicAutoScalerSpec) DeepCopyInto(out *BasicAutoScalerSpec) {
	*out = *in
	if in.Rules != nil {
		in, out := &in.Rules, &out.Rules
		*out = make(map[v1.ResourceName]AutoRule, len(*in))
		for key, val := range *in {
			(*out)[key] = *val.DeepCopy()
		}
	}
	if in.ScaleInIntervalSeconds != nil {
		in, out := &in.ScaleInIntervalSeconds, &out.ScaleInIntervalSeconds
		*out = new(int32)
		**out = **in
	}
	if in.ScaleOutIntervalSeconds != nil {
		in, out := &in.ScaleOutIntervalSeconds, &out.ScaleOutIntervalSeconds
		*out = new(int32)
		**out = **in
	}
	if in.External != nil {
		in, out := &in.External, &out.External
		*out = new(ExternalConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.Resources != nil {
		in, out := &in.Resources, &out.Resources
		*out = make(map[string]AutoResource, len(*in))
		for key, val := range *in {
			(*out)[key] = *val.DeepCopy()
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BasicAutoScalerSpec.
func (in *BasicAutoScalerSpec) DeepCopy() *BasicAutoScalerSpec {
	if in == nil {
		return nil
	}
	out := new(BasicAutoScalerSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BasicAutoScalerStatus) DeepCopyInto(out *BasicAutoScalerStatus) {
	*out = *in
	if in.LastAutoScalingTimestamp != nil {
		in, out := &in.LastAutoScalingTimestamp, &out.LastAutoScalingTimestamp
		*out = (*in).DeepCopy()
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BasicAutoScalerStatus.
func (in *BasicAutoScalerStatus) DeepCopy() *BasicAutoScalerStatus {
	if in == nil {
		return nil
	}
	out := new(BasicAutoScalerStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Binlog) DeepCopyInto(out *Binlog) {
	*out = *in
	if in.Enable != nil {
		in, out := &in.Enable, &out.Enable
		*out = new(bool)
		**out = **in
	}
	if in.WriteTimeout != nil {
		in, out := &in.WriteTimeout, &out.WriteTimeout
		*out = new(string)
		**out = **in
	}
	if in.IgnoreError != nil {
		in, out := &in.IgnoreError, &out.IgnoreError
		*out = new(bool)
		**out = **in
	}
	if in.BinlogSocket != nil {
		in, out := &in.BinlogSocket, &out.BinlogSocket
		*out = new(string)
		**out = **in
	}
	if in.Strategy != nil {
		in, out := &in.Strategy, &out.Strategy
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Binlog.
func (in *Binlog) DeepCopy() *Binlog {
	if in == nil {
		return nil
	}
	out := new(Binlog)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CDCConfigWraper) DeepCopyInto(out *CDCConfigWraper) {
	*out = *in
	if in.GenericConfig != nil {
		in, out := &in.GenericConfig, &out.GenericConfig
		*out = (*in).DeepCopy()
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CDCConfigWraper.
func (in *CDCConfigWraper) DeepCopy() *CDCConfigWraper {
	if in == nil {
		return nil
	}
	out := new(CDCConfigWraper)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterRef) DeepCopyInto(out *ClusterRef) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterRef.
func (in *ClusterRef) DeepCopy() *ClusterRef {
	if in == nil {
		return nil
	}
	out := new(ClusterRef)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CommonConfig) DeepCopyInto(out *CommonConfig) {
	*out = *in
	if in.TmpPath != nil {
		in, out := &in.TmpPath, &out.TmpPath
		*out = new(string)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.DefaultProfile != nil {
		in, out := &in.DefaultProfile, &out.DefaultProfile
		*out = new(string)
		**out = **in
	}
	if in.FlashDataPath != nil {
		in, out := &in.FlashDataPath, &out.FlashDataPath
		*out = new(string)
		**out = **in
	}
	if in.PathRealtimeMode != nil {
		in, out := &in.PathRealtimeMode, &out.PathRealtimeMode
		*out = new(bool)
		**out = **in
	}
	if in.MarkCacheSize != nil {
		in, out := &in.MarkCacheSize, &out.MarkCacheSize
		*out = new(int64)
		**out = **in
	}
	if in.MinmaxIndexCacheSize != nil {
		in, out := &in.MinmaxIndexCacheSize, &out.MinmaxIndexCacheSize
		*out = new(int64)
		**out = **in
	}
	if in.ListenHost != nil {
		in, out := &in.ListenHost, &out.ListenHost
		*out = new(string)
		**out = **in
	}
	if in.TCPPort != nil {
		in, out := &in.TCPPort, &out.TCPPort
		*out = new(int32)
		**out = **in
	}
	if in.HTTPPort != nil {
		in, out := &in.HTTPPort, &out.HTTPPort
		*out = new(int32)
		**out = **in
	}
	if in.TCPPortSecure != nil {
		in, out := &in.TCPPortSecure, &out.TCPPortSecure
		*out = new(int32)
		**out = **in
	}
	if in.HTTPSPort != nil {
		in, out := &in.HTTPSPort, &out.HTTPSPort
		*out = new(int32)
		**out = **in
	}
	if in.InternalServerHTTPPort != nil {
		in, out := &in.InternalServerHTTPPort, &out.InternalServerHTTPPort
		*out = new(int32)
		**out = **in
	}
	if in.Flash != nil {
		in, out := &in.Flash, &out.Flash
		*out = new(Flash)
		(*in).DeepCopyInto(*out)
	}
	if in.FlashLogger != nil {
		in, out := &in.FlashLogger, &out.FlashLogger
		*out = new(FlashLogger)
		(*in).DeepCopyInto(*out)
	}
	if in.FlashApplication != nil {
		in, out := &in.FlashApplication, &out.FlashApplication
		*out = new(FlashApplication)
		(*in).DeepCopyInto(*out)
	}
	if in.FlashRaft != nil {
		in, out := &in.FlashRaft, &out.FlashRaft
		*out = new(FlashRaft)
		(*in).DeepCopyInto(*out)
	}
	if in.FlashStatus != nil {
		in, out := &in.FlashStatus, &out.FlashStatus
		*out = new(FlashStatus)
		(*in).DeepCopyInto(*out)
	}
	if in.FlashQuota != nil {
		in, out := &in.FlashQuota, &out.FlashQuota
		*out = new(FlashQuota)
		(*in).DeepCopyInto(*out)
	}
	if in.FlashUser != nil {
		in, out := &in.FlashUser, &out.FlashUser
		*out = new(FlashUser)
		(*in).DeepCopyInto(*out)
	}
	if in.FlashProfile != nil {
		in, out := &in.FlashProfile, &out.FlashProfile
		*out = new(FlashProfile)
		(*in).DeepCopyInto(*out)
	}
	if in.Security != nil {
		in, out := &in.Security, &out.Security
		*out = new(FlashSecurity)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CommonConfig.
func (in *CommonConfig) DeepCopy() *CommonConfig {
	if in == nil {
		return nil
	}
	out := new(CommonConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ComponentSpec) DeepCopyInto(out *ComponentSpec) {
	*out = *in
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(string)
		**out = **in
	}
	if in.ImagePullPolicy != nil {
		in, out := &in.ImagePullPolicy, &out.ImagePullPolicy
		*out = new(v1.PullPolicy)
		**out = **in
	}
	if in.ImagePullSecrets != nil {
		in, out := &in.ImagePullSecrets, &out.ImagePullSecrets
		*out = make([]v1.LocalObjectReference, len(*in))
		copy(*out, *in)
	}
	if in.HostNetwork != nil {
		in, out := &in.HostNetwork, &out.HostNetwork
		*out = new(bool)
		**out = **in
	}
	if in.Affinity != nil {
		in, out := &in.Affinity, &out.Affinity
		*out = new(v1.Affinity)
		(*in).DeepCopyInto(*out)
	}
	if in.PriorityClassName != nil {
		in, out := &in.PriorityClassName, &out.PriorityClassName
		*out = new(string)
		**out = **in
	}
	if in.SchedulerName != nil {
		in, out := &in.SchedulerName, &out.SchedulerName
		*out = new(string)
		**out = **in
	}
	if in.NodeSelector != nil {
		in, out := &in.NodeSelector, &out.NodeSelector
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Tolerations != nil {
		in, out := &in.Tolerations, &out.Tolerations
		*out = make([]v1.Toleration, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PodSecurityContext != nil {
		in, out := &in.PodSecurityContext, &out.PodSecurityContext
		*out = new(v1.PodSecurityContext)
		(*in).DeepCopyInto(*out)
	}
	if in.ConfigUpdateStrategy != nil {
		in, out := &in.ConfigUpdateStrategy, &out.ConfigUpdateStrategy
		*out = new(ConfigUpdateStrategy)
		**out = **in
	}
	if in.Env != nil {
		in, out := &in.Env, &out.Env
		*out = make([]v1.EnvVar, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InitContainers != nil {
		in, out := &in.InitContainers, &out.InitContainers
		*out = make([]v1.Container, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AdditionalContainers != nil {
		in, out := &in.AdditionalContainers, &out.AdditionalContainers
		*out = make([]v1.Container, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AdditionalVolumes != nil {
		in, out := &in.AdditionalVolumes, &out.AdditionalVolumes
		*out = make([]v1.Volume, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AdditionalVolumeMounts != nil {
		in, out := &in.AdditionalVolumeMounts, &out.AdditionalVolumeMounts
		*out = make([]v1.VolumeMount, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TerminationGracePeriodSeconds != nil {
		in, out := &in.TerminationGracePeriodSeconds, &out.TerminationGracePeriodSeconds
		*out = new(int64)
		**out = **in
	}
	if in.TopologySpreadConstraints != nil {
		in, out := &in.TopologySpreadConstraints, &out.TopologySpreadConstraints
		*out = make([]TopologySpreadConstraint, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ComponentSpec.
func (in *ComponentSpec) DeepCopy() *ComponentSpec {
	if in == nil {
		return nil
	}
	out := new(ComponentSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigMapRef) DeepCopyInto(out *ConfigMapRef) {
	*out = *in
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigMapRef.
func (in *ConfigMapRef) DeepCopy() *ConfigMapRef {
	if in == nil {
		return nil
	}
	out := new(ConfigMapRef)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CoprocessorCache) DeepCopyInto(out *CoprocessorCache) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.CapacityMB != nil {
		in, out := &in.CapacityMB, &out.CapacityMB
		*out = new(float64)
		**out = **in
	}
	if in.AdmissionMaxResultMB != nil {
		in, out := &in.AdmissionMaxResultMB, &out.AdmissionMaxResultMB
		*out = new(float64)
		**out = **in
	}
	if in.AdmissionMinProcessMs != nil {
		in, out := &in.AdmissionMinProcessMs, &out.AdmissionMinProcessMs
		*out = new(uint64)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CoprocessorCache.
func (in *CoprocessorCache) DeepCopy() *CoprocessorCache {
	if in == nil {
		return nil
	}
	out := new(CoprocessorCache)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CrdKind) DeepCopyInto(out *CrdKind) {
	*out = *in
	if in.ShortNames != nil {
		in, out := &in.ShortNames, &out.ShortNames
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.AdditionalPrinterColums != nil {
		in, out := &in.AdditionalPrinterColums, &out.AdditionalPrinterColums
		*out = make([]v1beta1.CustomResourceColumnDefinition, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CrdKind.
func (in *CrdKind) DeepCopy() *CrdKind {
	if in == nil {
		return nil
	}
	out := new(CrdKind)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CrdKinds) DeepCopyInto(out *CrdKinds) {
	*out = *in
	in.TiDBCluster.DeepCopyInto(&out.TiDBCluster)
	in.DMCluster.DeepCopyInto(&out.DMCluster)
	in.Backup.DeepCopyInto(&out.Backup)
	in.Restore.DeepCopyInto(&out.Restore)
	in.BackupSchedule.DeepCopyInto(&out.BackupSchedule)
	in.TiDBMonitor.DeepCopyInto(&out.TiDBMonitor)
	in.TiDBInitializer.DeepCopyInto(&out.TiDBInitializer)
	in.TidbClusterAutoScaler.DeepCopyInto(&out.TidbClusterAutoScaler)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CrdKinds.
func (in *CrdKinds) DeepCopy() *CrdKinds {
	if in == nil {
		return nil
	}
	out := new(CrdKinds)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DMCluster) DeepCopyInto(out *DMCluster) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DMCluster.
func (in *DMCluster) DeepCopy() *DMCluster {
	if in == nil {
		return nil
	}
	out := new(DMCluster)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DMCluster) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DMClusterCondition) DeepCopyInto(out *DMClusterCondition) {
	*out = *in
	in.LastUpdateTime.DeepCopyInto(&out.LastUpdateTime)
	in.LastTransitionTime.DeepCopyInto(&out.LastTransitionTime)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DMClusterCondition.
func (in *DMClusterCondition) DeepCopy() *DMClusterCondition {
	if in == nil {
		return nil
	}
	out := new(DMClusterCondition)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DMClusterList) DeepCopyInto(out *DMClusterList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]DMCluster, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DMClusterList.
func (in *DMClusterList) DeepCopy() *DMClusterList {
	if in == nil {
		return nil
	}
	out := new(DMClusterList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DMClusterList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DMClusterSpec) DeepCopyInto(out *DMClusterSpec) {
	*out = *in
	in.Discovery.DeepCopyInto(&out.Discovery)
	in.Master.DeepCopyInto(&out.Master)
	if in.Worker != nil {
		in, out := &in.Worker, &out.Worker
		*out = new(WorkerSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.PVReclaimPolicy != nil {
		in, out := &in.PVReclaimPolicy, &out.PVReclaimPolicy
		*out = new(v1.PersistentVolumeReclaimPolicy)
		**out = **in
	}
	if in.ImagePullSecrets != nil {
		in, out := &in.ImagePullSecrets, &out.ImagePullSecrets
		*out = make([]v1.LocalObjectReference, len(*in))
		copy(*out, *in)
	}
	if in.EnablePVReclaim != nil {
		in, out := &in.EnablePVReclaim, &out.EnablePVReclaim
		*out = new(bool)
		**out = **in
	}
	if in.TLSCluster != nil {
		in, out := &in.TLSCluster, &out.TLSCluster
		*out = new(TLSCluster)
		**out = **in
	}
	if in.TLSClientSecretNames != nil {
		in, out := &in.TLSClientSecretNames, &out.TLSClientSecretNames
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.HostNetwork != nil {
		in, out := &in.HostNetwork, &out.HostNetwork
		*out = new(bool)
		**out = **in
	}
	if in.Affinity != nil {
		in, out := &in.Affinity, &out.Affinity
		*out = new(v1.Affinity)
		(*in).DeepCopyInto(*out)
	}
	if in.PriorityClassName != nil {
		in, out := &in.PriorityClassName, &out.PriorityClassName
		*out = new(string)
		**out = **in
	}
	if in.NodeSelector != nil {
		in, out := &in.NodeSelector, &out.NodeSelector
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Tolerations != nil {
		in, out := &in.Tolerations, &out.Tolerations
		*out = make([]v1.Toleration, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PodSecurityContext != nil {
		in, out := &in.PodSecurityContext, &out.PodSecurityContext
		*out = new(v1.PodSecurityContext)
		(*in).DeepCopyInto(*out)
	}
	if in.TopologySpreadConstraints != nil {
		in, out := &in.TopologySpreadConstraints, &out.TopologySpreadConstraints
		*out = make([]TopologySpreadConstraint, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DMClusterSpec.
func (in *DMClusterSpec) DeepCopy() *DMClusterSpec {
	if in == nil {
		return nil
	}
	out := new(DMClusterSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DMClusterStatus) DeepCopyInto(out *DMClusterStatus) {
	*out = *in
	in.Master.DeepCopyInto(&out.Master)
	in.Worker.DeepCopyInto(&out.Worker)
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]DMClusterCondition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DMClusterStatus.
func (in *DMClusterStatus) DeepCopy() *DMClusterStatus {
	if in == nil {
		return nil
	}
	out := new(DMClusterStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DMDiscoverySpec) DeepCopyInto(out *DMDiscoverySpec) {
	*out = *in
	in.ResourceRequirements.DeepCopyInto(&out.ResourceRequirements)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DMDiscoverySpec.
func (in *DMDiscoverySpec) DeepCopy() *DMDiscoverySpec {
	if in == nil {
		return nil
	}
	out := new(DMDiscoverySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DMMonitorSpec) DeepCopyInto(out *DMMonitorSpec) {
	*out = *in
	if in.Clusters != nil {
		in, out := &in.Clusters, &out.Clusters
		*out = make([]ClusterRef, len(*in))
		copy(*out, *in)
	}
	in.Initializer.DeepCopyInto(&out.Initializer)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DMMonitorSpec.
func (in *DMMonitorSpec) DeepCopy() *DMMonitorSpec {
	if in == nil {
		return nil
	}
	out := new(DMMonitorSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DMSecurityConfig) DeepCopyInto(out *DMSecurityConfig) {
	*out = *in
	if in.SSLCA != nil {
		in, out := &in.SSLCA, &out.SSLCA
		*out = new(string)
		**out = **in
	}
	if in.SSLCert != nil {
		in, out := &in.SSLCert, &out.SSLCert
		*out = new(string)
		**out = **in
	}
	if in.SSLKey != nil {
		in, out := &in.SSLKey, &out.SSLKey
		*out = new(string)
		**out = **in
	}
	if in.CertAllowedCN != nil {
		in, out := &in.CertAllowedCN, &out.CertAllowedCN
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DMSecurityConfig.
func (in *DMSecurityConfig) DeepCopy() *DMSecurityConfig {
	if in == nil {
		return nil
	}
	out := new(DMSecurityConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DashboardConfig) DeepCopyInto(out *DashboardConfig) {
	*out = *in
	if in.TiDBCAPath != nil {
		in, out := &in.TiDBCAPath, &out.TiDBCAPath
		*out = new(string)
		**out = **in
	}
	if in.TiDBCertPath != nil {
		in, out := &in.TiDBCertPath, &out.TiDBCertPath
		*out = new(string)
		**out = **in
	}
	if in.TiDBKeyPath != nil {
		in, out := &in.TiDBKeyPath, &out.TiDBKeyPath
		*out = new(string)
		**out = **in
	}
	if in.PublicPathPrefix != nil {
		in, out := &in.PublicPathPrefix, &out.PublicPathPrefix
		*out = new(string)
		**out = **in
	}
	if in.InternalProxy != nil {
		in, out := &in.InternalProxy, &out.InternalProxy
		*out = new(bool)
		**out = **in
	}
	if in.DisableTelemetry != nil {
		in, out := &in.DisableTelemetry, &out.DisableTelemetry
		*out = new(bool)
		**out = **in
	}
	if in.EnableTelemetry != nil {
		in, out := &in.EnableTelemetry, &out.EnableTelemetry
		*out = new(bool)
		**out = **in
	}
	if in.EnableExperimental != nil {
		in, out := &in.EnableExperimental, &out.EnableExperimental
		*out = new(bool)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DashboardConfig.
func (in *DashboardConfig) DeepCopy() *DashboardConfig {
	if in == nil {
		return nil
	}
	out := new(DashboardConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataResource) DeepCopyInto(out *DataResource) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	if in.Data != nil {
		in, out := &in.Data, &out.Data
		*out = make([]byte, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataResource.
func (in *DataResource) DeepCopy() *DataResource {
	if in == nil {
		return nil
	}
	out := new(DataResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DataResource) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataResourceList) DeepCopyInto(out *DataResourceList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]DataResource, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataResourceList.
func (in *DataResourceList) DeepCopy() *DataResourceList {
	if in == nil {
		return nil
	}
	out := new(DataResourceList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DataResourceList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DeploymentStorageStatus) DeepCopyInto(out *DeploymentStorageStatus) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DeploymentStorageStatus.
func (in *DeploymentStorageStatus) DeepCopy() *DeploymentStorageStatus {
	if in == nil {
		return nil
	}
	out := new(DeploymentStorageStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DiscoverySpec) DeepCopyInto(out *DiscoverySpec) {
	*out = *in
	in.ResourceRequirements.DeepCopyInto(&out.ResourceRequirements)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DiscoverySpec.
func (in *DiscoverySpec) DeepCopy() *DiscoverySpec {
	if in == nil {
		return nil
	}
	out := new(DiscoverySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DumplingConfig) DeepCopyInto(out *DumplingConfig) {
	*out = *in
	if in.Options != nil {
		in, out := &in.Options, &out.Options
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.TableFilter != nil {
		in, out := &in.TableFilter, &out.TableFilter
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DumplingConfig.
func (in *DumplingConfig) DeepCopy() *DumplingConfig {
	if in == nil {
		return nil
	}
	out := new(DumplingConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Experimental) DeepCopyInto(out *Experimental) {
	*out = *in
	if in.AllowAutoRandom != nil {
		in, out := &in.AllowAutoRandom, &out.AllowAutoRandom
		*out = new(bool)
		**out = **in
	}
	if in.AllowsExpressionIndex != nil {
		in, out := &in.AllowsExpressionIndex, &out.AllowsExpressionIndex
		*out = new(bool)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Experimental.
func (in *Experimental) DeepCopy() *Experimental {
	if in == nil {
		return nil
	}
	out := new(Experimental)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExternalConfig) DeepCopyInto(out *ExternalConfig) {
	*out = *in
	in.Endpoint.DeepCopyInto(&out.Endpoint)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExternalConfig.
func (in *ExternalConfig) DeepCopy() *ExternalConfig {
	if in == nil {
		return nil
	}
	out := new(ExternalConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExternalEndpoint) DeepCopyInto(out *ExternalEndpoint) {
	*out = *in
	if in.TLSSecret != nil {
		in, out := &in.TLSSecret, &out.TLSSecret
		*out = new(SecretRef)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExternalEndpoint.
func (in *ExternalEndpoint) DeepCopy() *ExternalEndpoint {
	if in == nil {
		return nil
	}
	out := new(ExternalEndpoint)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FileLogConfig) DeepCopyInto(out *FileLogConfig) {
	*out = *in
	if in.Filename != nil {
		in, out := &in.Filename, &out.Filename
		*out = new(string)
		**out = **in
	}
	if in.LogRotate != nil {
		in, out := &in.LogRotate, &out.LogRotate
		*out = new(bool)
		**out = **in
	}
	if in.MaxSize != nil {
		in, out := &in.MaxSize, &out.MaxSize
		*out = new(int)
		**out = **in
	}
	if in.MaxDays != nil {
		in, out := &in.MaxDays, &out.MaxDays
		*out = new(int)
		**out = **in
	}
	if in.MaxBackups != nil {
		in, out := &in.MaxBackups, &out.MaxBackups
		*out = new(int)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FileLogConfig.
func (in *FileLogConfig) DeepCopy() *FileLogConfig {
	if in == nil {
		return nil
	}
	out := new(FileLogConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Flash) DeepCopyInto(out *Flash) {
	*out = *in
	if in.TiDBStatusAddr != nil {
		in, out := &in.TiDBStatusAddr, &out.TiDBStatusAddr
		*out = new(string)
		**out = **in
	}
	if in.ServiceAddr != nil {
		in, out := &in.ServiceAddr, &out.ServiceAddr
		*out = new(string)
		**out = **in
	}
	if in.OverlapThreshold != nil {
		in, out := &in.OverlapThreshold, &out.OverlapThreshold
		*out = new(float64)
		**out = **in
	}
	if in.CompactLogMinPeriod != nil {
		in, out := &in.CompactLogMinPeriod, &out.CompactLogMinPeriod
		*out = new(int32)
		**out = **in
	}
	if in.FlashCluster != nil {
		in, out := &in.FlashCluster, &out.FlashCluster
		*out = new(FlashCluster)
		(*in).DeepCopyInto(*out)
	}
	if in.FlashProxy != nil {
		in, out := &in.FlashProxy, &out.FlashProxy
		*out = new(FlashProxy)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Flash.
func (in *Flash) DeepCopy() *Flash {
	if in == nil {
		return nil
	}
	out := new(Flash)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FlashApplication) DeepCopyInto(out *FlashApplication) {
	*out = *in
	if in.RunAsDaemon != nil {
		in, out := &in.RunAsDaemon, &out.RunAsDaemon
		*out = new(bool)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FlashApplication.
func (in *FlashApplication) DeepCopy() *FlashApplication {
	if in == nil {
		return nil
	}
	out := new(FlashApplication)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FlashCluster) DeepCopyInto(out *FlashCluster) {
	*out = *in
	if in.ClusterManagerPath != nil {
		in, out := &in.ClusterManagerPath, &out.ClusterManagerPath
		*out = new(string)
		**out = **in
	}
	if in.ClusterLog != nil {
		in, out := &in.ClusterLog, &out.ClusterLog
		*out = new(string)
		**out = **in
	}
	if in.RefreshInterval != nil {
		in, out := &in.RefreshInterval, &out.RefreshInterval
		*out = new(int32)
		**out = **in
	}
	if in.UpdateRuleInterval != nil {
		in, out := &in.UpdateRuleInterval, &out.UpdateRuleInterval
		*out = new(int32)
		**out = **in
	}
	if in.MasterTTL != nil {
		in, out := &in.MasterTTL, &out.MasterTTL
		*out = new(int32)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FlashCluster.
func (in *FlashCluster) DeepCopy() *FlashCluster {
	if in == nil {
		return nil
	}
	out := new(FlashCluster)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FlashLogger) DeepCopyInto(out *FlashLogger) {
	*out = *in
	if in.ErrorLog != nil {
		in, out := &in.ErrorLog, &out.ErrorLog
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(string)
		**out = **in
	}
	if in.ServerLog != nil {
		in, out := &in.ServerLog, &out.ServerLog
		*out = new(string)
		**out = **in
	}
	if in.Level != nil {
		in, out := &in.Level, &out.Level
		*out = new(string)
		**out = **in
	}
	if in.Count != nil {
		in, out := &in.Count, &out.Count
		*out = new(int32)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FlashLogger.
func (in *FlashLogger) DeepCopy() *FlashLogger {
	if in == nil {
		return nil
	}
	out := new(FlashLogger)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FlashProfile) DeepCopyInto(out *FlashProfile) {
	*out = *in
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(Profile)
		(*in).DeepCopyInto(*out)
	}
	if in.Default != nil {
		in, out := &in.Default, &out.Default
		*out = new(Profile)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FlashProfile.
func (in *FlashProfile) DeepCopy() *FlashProfile {
	if in == nil {
		return nil
	}
	out := new(FlashProfile)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FlashProxy) DeepCopyInto(out *FlashProxy) {
	*out = *in
	if in.Addr != nil {
		in, out := &in.Addr, &out.Addr
		*out = new(string)
		**out = **in
	}
	if in.AdvertiseAddr != nil {
		in, out := &in.AdvertiseAddr, &out.AdvertiseAddr
		*out = new(string)
		**out = **in
	}
	if in.DataDir != nil {
		in, out := &in.DataDir, &out.DataDir
		*out = new(string)
		**out = **in
	}
	if in.Config != nil {
		in, out := &in.Config, &out.Config
		*out = new(string)
		**out = **in
	}
	if in.LogFile != nil {
		in, out := &in.LogFile, &out.LogFile
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FlashProxy.
func (in *FlashProxy) DeepCopy() *FlashProxy {
	if in == nil {
		return nil
	}
	out := new(FlashProxy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FlashQuota) DeepCopyInto(out *FlashQuota) {
	*out = *in
	if in.Default != nil {
		in, out := &in.Default, &out.Default
		*out = new(Quota)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FlashQuota.
func (in *FlashQuota) DeepCopy() *FlashQuota {
	if in == nil {
		return nil
	}
	out := new(FlashQuota)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FlashRaft) DeepCopyInto(out *FlashRaft) {
	*out = *in
	if in.PDAddr != nil {
		in, out := &in.PDAddr, &out.PDAddr
		*out = new(string)
		**out = **in
	}
	if in.KVStorePath != nil {
		in, out := &in.KVStorePath, &out.KVStorePath
		*out = new(string)
		**out = **in
	}
	if in.StorageEngine != nil {
		in, out := &in.StorageEngine, &out.StorageEngine
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FlashRaft.
func (in *FlashRaft) DeepCopy() *FlashRaft {
	if in == nil {
		return nil
	}
	out := new(FlashRaft)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FlashSecurity) DeepCopyInto(out *FlashSecurity) {
	*out = *in
	if in.CAPath != nil {
		in, out := &in.CAPath, &out.CAPath
		*out = new(string)
		**out = **in
	}
	if in.CertPath != nil {
		in, out := &in.CertPath, &out.CertPath
		*out = new(string)
		**out = **in
	}
	if in.KeyPath != nil {
		in, out := &in.KeyPath, &out.KeyPath
		*out = new(string)
		**out = **in
	}
	if in.CertAllowedCN != nil {
		in, out := &in.CertAllowedCN, &out.CertAllowedCN
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FlashSecurity.
func (in *FlashSecurity) DeepCopy() *FlashSecurity {
	if in == nil {
		return nil
	}
	out := new(FlashSecurity)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FlashServerConfig) DeepCopyInto(out *FlashServerConfig) {
	*out = *in
	if in.EngineAddr != nil {
		in, out := &in.EngineAddr, &out.EngineAddr
		*out = new(string)
		**out = **in
	}
	if in.StatusAddr != nil {
		in, out := &in.StatusAddr, &out.StatusAddr
		*out = new(string)
		**out = **in
	}
	if in.AdvertiseStatusAddr != nil {
		in, out := &in.AdvertiseStatusAddr, &out.AdvertiseStatusAddr
		*out = new(string)
		**out = **in
	}
	in.TiKVServerConfig.DeepCopyInto(&out.TiKVServerConfig)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FlashServerConfig.
func (in *FlashServerConfig) DeepCopy() *FlashServerConfig {
	if in == nil {
		return nil
	}
	out := new(FlashServerConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FlashStatus) DeepCopyInto(out *FlashStatus) {
	*out = *in
	if in.MetricsPort != nil {
		in, out := &in.MetricsPort, &out.MetricsPort
		*out = new(int32)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FlashStatus.
func (in *FlashStatus) DeepCopy() *FlashStatus {
	if in == nil {
		return nil
	}
	out := new(FlashStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FlashUser) DeepCopyInto(out *FlashUser) {
	*out = *in
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(User)
		(*in).DeepCopyInto(*out)
	}
	if in.Default != nil {
		in, out := &in.Default, &out.Default
		*out = new(User)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FlashUser.
func (in *FlashUser) DeepCopy() *FlashUser {
	if in == nil {
		return nil
	}
	out := new(FlashUser)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GcsStorageProvider) DeepCopyInto(out *GcsStorageProvider) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GcsStorageProvider.
func (in *GcsStorageProvider) DeepCopy() *GcsStorageProvider {
	if in == nil {
		return nil
	}
	out := new(GcsStorageProvider)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GrafanaSpec) DeepCopyInto(out *GrafanaSpec) {
	*out = *in
	in.MonitorContainer.DeepCopyInto(&out.MonitorContainer)
	in.Service.DeepCopyInto(&out.Service)
	if in.Envs != nil {
		in, out := &in.Envs, &out.Envs
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Ingress != nil {
		in, out := &in.Ingress, &out.Ingress
		*out = new(IngressSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.AdditionalVolumeMounts != nil {
		in, out := &in.AdditionalVolumeMounts, &out.AdditionalVolumeMounts
		*out = make([]v1.VolumeMount, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GrafanaSpec.
func (in *GrafanaSpec) DeepCopy() *GrafanaSpec {
	if in == nil {
		return nil
	}
	out := new(GrafanaSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HelperSpec) DeepCopyInto(out *HelperSpec) {
	*out = *in
	if in.Image != nil {
		in, out := &in.Image, &out.Image
		*out = new(string)
		**out = **in
	}
	if in.ImagePullPolicy != nil {
		in, out := &in.ImagePullPolicy, &out.ImagePullPolicy
		*out = new(v1.PullPolicy)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HelperSpec.
func (in *HelperSpec) DeepCopy() *HelperSpec {
	if in == nil {
		return nil
	}
	out := new(HelperSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IngressSpec) DeepCopyInto(out *IngressSpec) {
	*out = *in
	if in.Hosts != nil {
		in, out := &in.Hosts, &out.Hosts
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.TLS != nil {
		in, out := &in.TLS, &out.TLS
		*out = make([]extensionsv1beta1.IngressTLS, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IngressSpec.
func (in *IngressSpec) DeepCopy() *IngressSpec {
	if in == nil {
		return nil
	}
	out := new(IngressSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InitializerSpec) DeepCopyInto(out *InitializerSpec) {
	*out = *in
	in.MonitorContainer.DeepCopyInto(&out.MonitorContainer)
	if in.Envs != nil {
		in, out := &in.Envs, &out.Envs
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InitializerSpec.
func (in *InitializerSpec) DeepCopy() *InitializerSpec {
	if in == nil {
		return nil
	}
	out := new(InitializerSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Interval) DeepCopyInto(out *Interval) {
	*out = *in
	if in.Duration != nil {
		in, out := &in.Duration, &out.Duration
		*out = new(int32)
		**out = **in
	}
	if in.Queries != nil {
		in, out := &in.Queries, &out.Queries
		*out = new(int32)
		**out = **in
	}
	if in.Errors != nil {
		in, out := &in.Errors, &out.Errors
		*out = new(int32)
		**out = **in
	}
	if in.ResultRows != nil {
		in, out := &in.ResultRows, &out.ResultRows
		*out = new(int32)
		**out = **in
	}
	if in.ReadRows != nil {
		in, out := &in.ReadRows, &out.ReadRows
		*out = new(int32)
		**out = **in
	}
	if in.ExecutionTime != nil {
		in, out := &in.ExecutionTime, &out.ExecutionTime
		*out = new(int32)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Interval.
func (in *Interval) DeepCopy() *Interval {
	if in == nil {
		return nil
	}
	out := new(Interval)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IsolationRead) DeepCopyInto(out *IsolationRead) {
	*out = *in
	if in.Engines != nil {
		in, out := &in.Engines, &out.Engines
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IsolationRead.
func (in *IsolationRead) DeepCopy() *IsolationRead {
	if in == nil {
		return nil
	}
	out := new(IsolationRead)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LocalStorageProvider) DeepCopyInto(out *LocalStorageProvider) {
	*out = *in
	in.Volume.DeepCopyInto(&out.Volume)
	in.VolumeMount.DeepCopyInto(&out.VolumeMount)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LocalStorageProvider.
func (in *LocalStorageProvider) DeepCopy() *LocalStorageProvider {
	if in == nil {
		return nil
	}
	out := new(LocalStorageProvider)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Log) DeepCopyInto(out *Log) {
	*out = *in
	if in.Level != nil {
		in, out := &in.Level, &out.Level
		*out = new(string)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.DisableTimestamp != nil {
		in, out := &in.DisableTimestamp, &out.DisableTimestamp
		*out = new(bool)
		**out = **in
	}
	if in.EnableTimestamp != nil {
		in, out := &in.EnableTimestamp, &out.EnableTimestamp
		*out = new(bool)
		**out = **in
	}
	if in.EnableErrorStack != nil {
		in, out := &in.EnableErrorStack, &out.EnableErrorStack
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(FileLogConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.EnableSlowLog != nil {
		in, out := &in.EnableSlowLog, &out.EnableSlowLog
		*out = new(bool)
		**out = **in
	}
	if in.SlowQueryFile != nil {
		in, out := &in.SlowQueryFile, &out.SlowQueryFile
		*out = new(string)
		**out = **in
	}
	if in.SlowThreshold != nil {
		in, out := &in.SlowThreshold, &out.SlowThreshold
		*out = new(uint64)
		**out = **in
	}
	if in.ExpensiveThreshold != nil {
		in, out := &in.ExpensiveThreshold, &out.ExpensiveThreshold
		*out = new(uint)
		**out = **in
	}
	if in.QueryLogMaxLen != nil {
		in, out := &in.QueryLogMaxLen, &out.QueryLogMaxLen
		*out = new(uint64)
		**out = **in
	}
	if in.RecordPlanInSlowLog != nil {
		in, out := &in.RecordPlanInSlowLog, &out.RecordPlanInSlowLog
		*out = new(uint32)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Log.
func (in *Log) DeepCopy() *Log {
	if in == nil {
		return nil
	}
	out := new(Log)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LogTailerSpec) DeepCopyInto(out *LogTailerSpec) {
	*out = *in
	in.ResourceRequirements.DeepCopyInto(&out.ResourceRequirements)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LogTailerSpec.
func (in *LogTailerSpec) DeepCopy() *LogTailerSpec {
	if in == nil {
		return nil
	}
	out := new(LogTailerSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MasterConfig) DeepCopyInto(out *MasterConfig) {
	*out = *in
	if in.LogLevel != nil {
		in, out := &in.LogLevel, &out.LogLevel
		*out = new(string)
		**out = **in
	}
	if in.LogFile != nil {
		in, out := &in.LogFile, &out.LogFile
		*out = new(string)
		**out = **in
	}
	if in.LogFormat != nil {
		in, out := &in.LogFormat, &out.LogFormat
		*out = new(string)
		**out = **in
	}
	if in.RPCTimeoutStr != nil {
		in, out := &in.RPCTimeoutStr, &out.RPCTimeoutStr
		*out = new(string)
		**out = **in
	}
	if in.RPCRateLimit != nil {
		in, out := &in.RPCRateLimit, &out.RPCRateLimit
		*out = new(float64)
		**out = **in
	}
	if in.RPCRateBurst != nil {
		in, out := &in.RPCRateBurst, &out.RPCRateBurst
		*out = new(int)
		**out = **in
	}
	in.DMSecurityConfig.DeepCopyInto(&out.DMSecurityConfig)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MasterConfig.
func (in *MasterConfig) DeepCopy() *MasterConfig {
	if in == nil {
		return nil
	}
	out := new(MasterConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MasterFailureMember) DeepCopyInto(out *MasterFailureMember) {
	*out = *in
	in.CreatedAt.DeepCopyInto(&out.CreatedAt)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MasterFailureMember.
func (in *MasterFailureMember) DeepCopy() *MasterFailureMember {
	if in == nil {
		return nil
	}
	out := new(MasterFailureMember)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MasterKeyFileConfig) DeepCopyInto(out *MasterKeyFileConfig) {
	*out = *in
	if in.Method != nil {
		in, out := &in.Method, &out.Method
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MasterKeyFileConfig.
func (in *MasterKeyFileConfig) DeepCopy() *MasterKeyFileConfig {
	if in == nil {
		return nil
	}
	out := new(MasterKeyFileConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MasterKeyKMSConfig) DeepCopyInto(out *MasterKeyKMSConfig) {
	*out = *in
	if in.KeyID != nil {
		in, out := &in.KeyID, &out.KeyID
		*out = new(string)
		**out = **in
	}
	if in.AccessKey != nil {
		in, out := &in.AccessKey, &out.AccessKey
		*out = new(string)
		**out = **in
	}
	if in.SecretKey != nil {
		in, out := &in.SecretKey, &out.SecretKey
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.Endpoint != nil {
		in, out := &in.Endpoint, &out.Endpoint
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MasterKeyKMSConfig.
func (in *MasterKeyKMSConfig) DeepCopy() *MasterKeyKMSConfig {
	if in == nil {
		return nil
	}
	out := new(MasterKeyKMSConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MasterMember) DeepCopyInto(out *MasterMember) {
	*out = *in
	in.LastTransitionTime.DeepCopyInto(&out.LastTransitionTime)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MasterMember.
func (in *MasterMember) DeepCopy() *MasterMember {
	if in == nil {
		return nil
	}
	out := new(MasterMember)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MasterServiceSpec) DeepCopyInto(out *MasterServiceSpec) {
	*out = *in
	in.ServiceSpec.DeepCopyInto(&out.ServiceSpec)
	if in.ExternalTrafficPolicy != nil {
		in, out := &in.ExternalTrafficPolicy, &out.ExternalTrafficPolicy
		*out = new(v1.ServiceExternalTrafficPolicyType)
		**out = **in
	}
	if in.MasterNodePort != nil {
		in, out := &in.MasterNodePort, &out.MasterNodePort
		*out = new(int)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MasterServiceSpec.
func (in *MasterServiceSpec) DeepCopy() *MasterServiceSpec {
	if in == nil {
		return nil
	}
	out := new(MasterServiceSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MasterSpec) DeepCopyInto(out *MasterSpec) {
	*out = *in
	in.ComponentSpec.DeepCopyInto(&out.ComponentSpec)
	in.ResourceRequirements.DeepCopyInto(&out.ResourceRequirements)
	if in.Service != nil {
		in, out := &in.Service, &out.Service
		*out = new(MasterServiceSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.MaxFailoverCount != nil {
		in, out := &in.MaxFailoverCount, &out.MaxFailoverCount
		*out = new(int32)
		**out = **in
	}
	if in.StorageClassName != nil {
		in, out := &in.StorageClassName, &out.StorageClassName
		*out = new(string)
		**out = **in
	}
	if in.Config != nil {
		in, out := &in.Config, &out.Config
		*out = new(MasterConfig)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MasterSpec.
func (in *MasterSpec) DeepCopy() *MasterSpec {
	if in == nil {
		return nil
	}
	out := new(MasterSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MasterStatus) DeepCopyInto(out *MasterStatus) {
	*out = *in
	if in.StatefulSet != nil {
		in, out := &in.StatefulSet, &out.StatefulSet
		*out = new(appsv1.StatefulSetStatus)
		(*in).DeepCopyInto(*out)
	}
	if in.Members != nil {
		in, out := &in.Members, &out.Members
		*out = make(map[string]MasterMember, len(*in))
		for key, val := range *in {
			(*out)[key] = *val.DeepCopy()
		}
	}
	in.Leader.DeepCopyInto(&out.Leader)
	if in.FailureMembers != nil {
		in, out := &in.FailureMembers, &out.FailureMembers
		*out = make(map[string]MasterFailureMember, len(*in))
		for key, val := range *in {
			(*out)[key] = *val.DeepCopy()
		}
	}
	if in.UnjoinedMembers != nil {
		in, out := &in.UnjoinedMembers, &out.UnjoinedMembers
		*out = make(map[string]UnjoinedMember, len(*in))
		for key, val := range *in {
			(*out)[key] = *val.DeepCopy()
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MasterStatus.
func (in *MasterStatus) DeepCopy() *MasterStatus {
	if in == nil {
		return nil
	}
	out := new(MasterStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitorContainer) DeepCopyInto(out *MonitorContainer) {
	*out = *in
	in.ResourceRequirements.DeepCopyInto(&out.ResourceRequirements)
	if in.ImagePullPolicy != nil {
		in, out := &in.ImagePullPolicy, &out.ImagePullPolicy
		*out = new(v1.PullPolicy)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitorContainer.
func (in *MonitorContainer) DeepCopy() *MonitorContainer {
	if in == nil {
		return nil
	}
	out := new(MonitorContainer)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Networks) DeepCopyInto(out *Networks) {
	*out = *in
	if in.IP != nil {
		in, out := &in.IP, &out.IP
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Networks.
func (in *Networks) DeepCopy() *Networks {
	if in == nil {
		return nil
	}
	out := new(Networks)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OpenTracing) DeepCopyInto(out *OpenTracing) {
	*out = *in
	if in.Enable != nil {
		in, out := &in.Enable, &out.Enable
		*out = new(bool)
		**out = **in
	}
	if in.Sampler != nil {
		in, out := &in.Sampler, &out.Sampler
		*out = new(OpenTracingSampler)
		(*in).DeepCopyInto(*out)
	}
	if in.Reporter != nil {
		in, out := &in.Reporter, &out.Reporter
		*out = new(OpenTracingReporter)
		(*in).DeepCopyInto(*out)
	}
	if in.RPCMetrics != nil {
		in, out := &in.RPCMetrics, &out.RPCMetrics
		*out = new(bool)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OpenTracing.
func (in *OpenTracing) DeepCopy() *OpenTracing {
	if in == nil {
		return nil
	}
	out := new(OpenTracing)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OpenTracingReporter) DeepCopyInto(out *OpenTracingReporter) {
	*out = *in
	if in.QueueSize != nil {
		in, out := &in.QueueSize, &out.QueueSize
		*out = new(int)
		**out = **in
	}
	if in.BufferFlushInterval != nil {
		in, out := &in.BufferFlushInterval, &out.BufferFlushInterval
		*out = new(time.Duration)
		**out = **in
	}
	if in.LogSpans != nil {
		in, out := &in.LogSpans, &out.LogSpans
		*out = new(bool)
		**out = **in
	}
	if in.LocalAgentHostPort != nil {
		in, out := &in.LocalAgentHostPort, &out.LocalAgentHostPort
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OpenTracingReporter.
func (in *OpenTracingReporter) DeepCopy() *OpenTracingReporter {
	if in == nil {
		return nil
	}
	out := new(OpenTracingReporter)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OpenTracingSampler) DeepCopyInto(out *OpenTracingSampler) {
	*out = *in
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.Param != nil {
		in, out := &in.Param, &out.Param
		*out = new(float64)
		**out = **in
	}
	if in.SamplingServerURL != nil {
		in, out := &in.SamplingServerURL, &out.SamplingServerURL
		*out = new(string)
		**out = **in
	}
	if in.MaxOperations != nil {
		in, out := &in.MaxOperations, &out.MaxOperations
		*out = new(int)
		**out = **in
	}
	if in.SamplingRefreshInterval != nil {
		in, out := &in.SamplingRefreshInterval, &out.SamplingRefreshInterval
		*out = new(time.Duration)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OpenTracingSampler.
func (in *OpenTracingSampler) DeepCopy() *OpenTracingSampler {
	if in == nil {
		return nil
	}
	out := new(OpenTracingSampler)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PDConfig) DeepCopyInto(out *PDConfig) {
	*out = *in
	if in.ForceNewCluster != nil {
		in, out := &in.ForceNewCluster, &out.ForceNewCluster
		*out = new(bool)
		**out = **in
	}
	if in.EnableGRPCGateway != nil {
		in, out := &in.EnableGRPCGateway, &out.EnableGRPCGateway
		*out = new(bool)
		**out = **in
	}
	if in.InitialClusterToken != nil {
		in, out := &in.InitialClusterToken, &out.InitialClusterToken
		*out = new(string)
		**out = **in
	}
	if in.LeaderLease != nil {
		in, out := &in.LeaderLease, &out.LeaderLease
		*out = new(int64)
		**out = **in
	}
	if in.Log != nil {
		in, out := &in.Log, &out.Log
		*out = new(PDLogConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.LogFileDeprecated != nil {
		in, out := &in.LogFileDeprecated, &out.LogFileDeprecated
		*out = new(string)
		**out = **in
	}
	if in.LogLevelDeprecated != nil {
		in, out := &in.LogLevelDeprecated, &out.LogLevelDeprecated
		*out = new(string)
		**out = **in
	}
	if in.TsoSaveInterval != nil {
		in, out := &in.TsoSaveInterval, &out.TsoSaveInterval
		*out = new(string)
		**out = **in
	}
	if in.Metric != nil {
		in, out := &in.Metric, &out.Metric
		*out = new(PDMetricConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = new(PDScheduleConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.Replication != nil {
		in, out := &in.Replication, &out.Replication
		*out = new(PDReplicationConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = make(map[string]PDNamespaceConfig, len(*in))
		for key, val := range *in {
			(*out)[key] = *val.DeepCopy()
		}
	}
	if in.PDServerCfg != nil {
		in, out := &in.PDServerCfg, &out.PDServerCfg
		*out = new(PDServerConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.ClusterVersion != nil {
		in, out := &in.ClusterVersion, &out.ClusterVersion
		*out = new(string)
		**out = **in
	}
	if in.QuotaBackendBytes != nil {
		in, out := &in.QuotaBackendBytes, &out.QuotaBackendBytes
		*out = new(string)
		**out = **in
	}
	if in.AutoCompactionMode != nil {
		in, out := &in.AutoCompactionMode, &out.AutoCompactionMode
		*out = new(string)
		**out = **in
	}
	if in.AutoCompactionRetention != nil {
		in, out := &in.AutoCompactionRetention, &out.AutoCompactionRetention
		*out = new(string)
		**out = **in
	}
	if in.TickInterval != nil {
		in, out := &in.TickInterval, &out.TickInterval
		*out = new(string)
		**out = **in
	}
	if in.ElectionInterval != nil {
		in, out := &in.ElectionInterval, &out.ElectionInterval
		*out = new(string)
		**out = **in
	}
	if in.PreVote != nil {
		in, out := &in.PreVote, &out.PreVote
		*out = new(bool)
		**out = **in
	}
	if in.Security != nil {
		in, out := &in.Security, &out.Security
		*out = new(PDSecurityConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.LabelProperty != nil {
		in, out := &in.LabelProperty, &out.LabelProperty
		*out = make(PDLabelPropertyConfig, len(*in))
		for key, val := range *in {
			var outVal []PDStoreLabel
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = make(PDStoreLabels, len(*in))
				for i := range *in {
					(*in)[i].DeepCopyInto(&(*out)[i])
				}
			}
			(*out)[key] = outVal
		}
	}
	if in.NamespaceClassifier != nil {
		in, out := &in.NamespaceClassifier, &out.NamespaceClassifier
		*out = new(string)
		**out = **in
	}
	if in.Dashboard != nil {
		in, out := &in.Dashboard, &out.Dashboard
		*out = new(DashboardConfig)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PDConfig.
func (in *PDConfig) DeepCopy() *PDConfig {
	if in == nil {
		return nil
	}
	out := new(PDConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PDConfigWraper) DeepCopyInto(out *PDConfigWraper) {
	*out = *in
	if in.GenericConfig != nil {
		in, out := &in.GenericConfig, &out.GenericConfig
		*out = (*in).DeepCopy()
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PDConfigWraper.
func (in *PDConfigWraper) DeepCopy() *PDConfigWraper {
	if in == nil {
		return nil
	}
	out := new(PDConfigWraper)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PDFailureMember) DeepCopyInto(out *PDFailureMember) {
	*out = *in
	if in.PVCUIDSet != nil {
		in, out := &in.PVCUIDSet, &out.PVCUIDSet
		*out = make(map[types.UID]struct{}, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	in.CreatedAt.DeepCopyInto(&out.CreatedAt)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PDFailureMember.
func (in *PDFailureMember) DeepCopy() *PDFailureMember {
	if in == nil {
		return nil
	}
	out := new(PDFailureMember)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in PDLabelPropertyConfig) DeepCopyInto(out *PDLabelPropertyConfig) {
	{
		in := &in
		*out = make(PDLabelPropertyConfig, len(*in))
		for key, val := range *in {
			var outVal []PDStoreLabel
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = make(PDStoreLabels, len(*in))
				for i := range *in {
					(*in)[i].DeepCopyInto(&(*out)[i])
				}
			}
			(*out)[key] = outVal
		}
		return
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PDLabelPropertyConfig.
func (in PDLabelPropertyConfig) DeepCopy() PDLabelPropertyConfig {
	if in == nil {
		return nil
	}
	out := new(PDLabelPropertyConfig)
	in.DeepCopyInto(out)
	return *out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PDLogConfig) DeepCopyInto(out *PDLogConfig) {
	*out = *in
	if in.Level != nil {
		in, out := &in.Level, &out.Level
		*out = new(string)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.DisableTimestamp != nil {
		in, out := &in.DisableTimestamp, &out.DisableTimestamp
		*out = new(bool)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(FileLogConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.Development != nil {
		in, out := &in.Development, &out.Development
		*out = new(bool)
		**out = **in
	}
	if in.DisableCaller != nil {
		in, out := &in.DisableCaller, &out.DisableCaller
		*out = new(bool)
		**out = **in
	}
	if in.DisableStacktrace != nil {
		in, out := &in.DisableStacktrace, &out.DisableStacktrace
		*out = new(bool)
		**out = **in
	}
	if in.DisableErrorVerbose != nil {
		in, out := &in.DisableErrorVerbose, &out.DisableErrorVerbose
		*out = new(bool)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PDLogConfig.
func (in *PDLogConfig) DeepCopy() *PDLogConfig {
	if in == nil {
		return nil
	}
	out := new(PDLogConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PDMember) DeepCopyInto(out *PDMember) {
	*out = *in
	in.LastTransitionTime.DeepCopyInto(&out.LastTransitionTime)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PDMember.
func (in *PDMember) DeepCopy() *PDMember {
	if in == nil {
		return nil
	}
	out := new(PDMember)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PDMetricConfig) DeepCopyInto(out *PDMetricConfig) {
	*out = *in
	if in.PushJob != nil {
		in, out := &in.PushJob, &out.PushJob
		*out = new(string)
		**out = **in
	}
	if in.PushAddress != nil {
		in, out := &in.PushAddress, &out.PushAddress
		*out = new(string)
		**out = **in
	}
	if in.PushInterval != nil {
		in, out := &in.PushInterval, &out.PushInterval
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PDMetricConfig.
func (in *PDMetricConfig) DeepCopy() *PDMetricConfig {
	if in == nil {
		return nil
	}
	out := new(PDMetricConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PDNamespaceConfig) DeepCopyInto(out *PDNamespaceConfig) {
	*out = *in
	if in.LeaderScheduleLimit != nil {
		in, out := &in.LeaderScheduleLimit, &out.LeaderScheduleLimit
		*out = new(uint64)
		**out = **in
	}
	if in.RegionScheduleLimit != nil {
		in, out := &in.RegionScheduleLimit, &out.RegionScheduleLimit
		*out = new(uint64)
		**out = **in
	}
	if in.ReplicaScheduleLimit != nil {
		in, out := &in.ReplicaScheduleLimit, &out.ReplicaScheduleLimit
		*out = new(uint64)
		**out = **in
	}
	if in.MergeScheduleLimit != nil {
		in, out := &in.MergeScheduleLimit, &out.MergeScheduleLimit
		*out = new(uint64)
		**out = **in
	}
	if in.HotRegionScheduleLimit != nil {
		in, out := &in.HotRegionScheduleLimit, &out.HotRegionScheduleLimit
		*out = new(uint64)
		**out = **in
	}
	if in.MaxReplicas != nil {
		in, out := &in.MaxReplicas, &out.MaxReplicas
		*out = new(uint64)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PDNamespaceConfig.
func (in *PDNamespaceConfig) DeepCopy() *PDNamespaceConfig {
	if in == nil {
		return nil
	}
	out := new(PDNamespaceConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PDReplicationConfig) DeepCopyInto(out *PDReplicationConfig) {
	*out = *in
	if in.MaxReplicas != nil {
		in, out := &in.MaxReplicas, &out.MaxReplicas
		*out = new(uint64)
		**out = **in
	}
	if in.LocationLabels != nil {
		in, out := &in.LocationLabels, &out.LocationLabels
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.StrictlyMatchLabel != nil {
		in, out := &in.StrictlyMatchLabel, &out.StrictlyMatchLabel
		*out = new(bool)
		**out = **in
	}
	if in.EnablePlacementRules != nil {
		in, out := &in.EnablePlacementRules, &out.EnablePlacementRules
		*out = new(bool)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PDReplicationConfig.
func (in *PDReplicationConfig) DeepCopy() *PDReplicationConfig {
	if in == nil {
		return nil
	}
	out := new(PDReplicationConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PDScheduleConfig) DeepCopyInto(out *PDScheduleConfig) {
	*out = *in
	if in.MaxSnapshotCount != nil {
		in, out := &in.MaxSnapshotCount, &out.MaxSnapshotCount
		*out = new(uint64)
		**out = **in
	}
	if in.MaxPendingPeerCount != nil {
		in, out := &in.MaxPendingPeerCount, &out.MaxPendingPeerCount
		*out = new(uint64)
		**out = **in
	}
	if in.MaxMergeRegionSize != nil {
		in, out := &in.MaxMergeRegionSize, &out.MaxMergeRegionSize
		*out = new(uint64)
		**out = **in
	}
	if in.MaxMergeRegionKeys != nil {
		in, out := &in.MaxMergeRegionKeys, &out.MaxMergeRegionKeys
		*out = new(uint64)
		**out = **in
	}
	if in.SplitMergeInterval != nil {
		in, out := &in.SplitMergeInterval, &out.SplitMergeInterval
		*out = new(string)
		**out = **in
	}
	if in.PatrolRegionInterval != nil {
		in, out := &in.PatrolRegionInterval, &out.PatrolRegionInterval
		*out = new(string)
		**out = **in
	}
	if in.MaxStoreDownTime != nil {
		in, out := &in.MaxStoreDownTime, &out.MaxStoreDownTime
		*out = new(string)
		**out = **in
	}
	if in.LeaderScheduleLimit != nil {
		in, out := &in.LeaderScheduleLimit, &out.LeaderScheduleLimit
		*out = new(uint64)
		**out = **in
	}
	if in.RegionScheduleLimit != nil {
		in, out := &in.RegionScheduleLimit, &out.RegionScheduleLimit
		*out = new(uint64)
		**out = **in
	}
	if in.ReplicaScheduleLimit != nil {
		in, out := &in.ReplicaScheduleLimit, &out.ReplicaScheduleLimit
		*out = new(uint64)
		**out = **in
	}
	if in.MergeScheduleLimit != nil {
		in, out := &in.MergeScheduleLimit, &out.MergeScheduleLimit
		*out = new(uint64)
		**out = **in
	}
	if in.HotRegionScheduleLimit != nil {
		in, out := &in.HotRegionScheduleLimit, &out.HotRegionScheduleLimit
		*out = new(uint64)
		**out = **in
	}
	if in.HotRegionCacheHitsThreshold != nil {
		in, out := &in.HotRegionCacheHitsThreshold, &out.HotRegionCacheHitsThreshold
		*out = new(uint64)
		**out = **in
	}
	if in.TolerantSizeRatio != nil {
		in, out := &in.TolerantSizeRatio, &out.TolerantSizeRatio
		*out = new(float64)
		**out = **in
	}
	if in.LowSpaceRatio != nil {
		in, out := &in.LowSpaceRatio, &out.LowSpaceRatio
		*out = new(float64)
		**out = **in
	}
	if in.HighSpaceRatio != nil {
		in, out := &in.HighSpaceRatio, &out.HighSpaceRatio
		*out = new(float64)
		**out = **in
	}
	if in.DisableLearner != nil {
		in, out := &in.DisableLearner, &out.DisableLearner
		*out = new(bool)
		**out = **in
	}
	if in.DisableRemoveDownReplica != nil {
		in, out := &in.DisableRemoveDownReplica, &out.DisableRemoveDownReplica
		*out = new(bool)
		**out = **in
	}
	if in.DisableReplaceOfflineReplica != nil {
		in, out := &in.DisableReplaceOfflineReplica, &out.DisableReplaceOfflineReplica
		*out = new(bool)
		**out = **in
	}
	if in.DisableMakeUpReplica != nil {
		in, out := &in.DisableMakeUpReplica, &out.DisableMakeUpReplica
		*out = new(bool)
		**out = **in
	}
	if in.DisableRemoveExtraReplica != nil {
		in, out := &in.DisableRemoveExtraReplica, &out.DisableRemoveExtraReplica
		*out = new(bool)
		**out = **in
	}
	if in.DisableLocationReplacement != nil {
		in, out := &in.DisableLocationReplacement, &out.DisableLocationReplacement
		*out = new(bool)
		**out = **in
	}
	if in.DisableNamespaceRelocation != nil {
		in, out := &in.DisableNamespaceRelocation, &out.DisableNamespaceRelocation
		*out = new(bool)
		**out = **in
	}
	if in.Schedulers != nil {
		in, out := &in.Schedulers, &out.Schedulers
		*out = make(PDSchedulerConfigs, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SchedulersPayload != nil {
		in, out := &in.SchedulersPayload, &out.SchedulersPayload
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.EnableOneWayMerge != nil {
		in, out := &in.EnableOneWayMerge, &out.EnableOneWayMerge
		*out = new(bool)
		**out = **in
	}
	if in.EnableCrossTableMerge != nil {
		in, out := &in.EnableCrossTableMerge, &out.EnableCrossTableMerge
		*out = new(bool)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PDScheduleConfig.
func (in *PDScheduleConfig) DeepCopy() *PDScheduleConfig {
	if in == nil {
		return nil
	}
	out := new(PDScheduleConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PDSchedulerConfig) DeepCopyInto(out *PDSchedulerConfig) {
	*out = *in
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.Args != nil {
		in, out := &in.Args, &out.Args
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Disable != nil {
		in, out := &in.Disable, &out.Disable
		*out = new(bool)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PDSchedulerConfig.
func (in *PDSchedulerConfig) DeepCopy() *PDSchedulerConfig {
	if in == nil {
		return nil
	}
	out := new(PDSchedulerConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in PDSchedulerConfigs) DeepCopyInto(out *PDSchedulerConfigs) {
	{
		in := &in
		*out = make(PDSchedulerConfigs, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
		return
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PDSchedulerConfigs.
func (in PDSchedulerConfigs) DeepCopy() PDSchedulerConfigs {
	if in == nil {
		return nil
	}
	out := new(PDSchedulerConfigs)
	in.DeepCopyInto(out)
	return *out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PDSecurityConfig) DeepCopyInto(out *PDSecurityConfig) {
	*out = *in
	if in.CAPath != nil {
		in, out := &in.CAPath, &out.CAPath
		*out = new(string)
		**out = **in
	}
	if in.CertPath != nil {
		in, out := &in.CertPath, &out.CertPath
		*out = new(string)
		**out = **in
	}
	if in.KeyPath != nil {
		in, out := &in.KeyPath, &out.KeyPath
		*out = new(string)
		**out = **in
	}
	if in.CertAllowedCN != nil {
		in, out := &in.CertAllowedCN, &out.CertAllowedCN
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PDSecurityConfig.
func (in *PDSecurityConfig) DeepCopy() *PDSecurityConfig {
	if in == nil {
		return nil
	}
	out := new(PDSecurityConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PDServerConfig) DeepCopyInto(out *PDServerConfig) {
	*out = *in
	if in.UseRegionStorage != nil {
		in, out := &in.UseRegionStorage, &out.UseRegionStorage
		*out = new(bool)
		**out = **in
	}
	if in.MetricStorage != nil {
		in, out := &in.MetricStorage, &out.MetricStorage
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PDServerConfig.
func (in *PDServerConfig) DeepCopy() *PDServerConfig {
	if in == nil {
		return nil
	}
	out := new(PDServerConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PDSpec) DeepCopyInto(out *PDSpec) {
	*out = *in
	in.ComponentSpec.DeepCopyInto(&out.ComponentSpec)
	in.ResourceRequirements.DeepCopyInto(&out.ResourceRequirements)
	if in.Service != nil {
		in, out := &in.Service, &out.Service
		*out = new(ServiceSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.MaxFailoverCount != nil {
		in, out := &in.MaxFailoverCount, &out.MaxFailoverCount
		*out = new(int32)
		**out = **in
	}
	if in.StorageClassName != nil {
		in, out := &in.StorageClassName, &out.StorageClassName
		*out = new(string)
		**out = **in
	}
	if in.StorageVolumes != nil {
		in, out := &in.StorageVolumes, &out.StorageVolumes
		*out = make([]StorageVolume, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Config != nil {
		in, out := &in.Config, &out.Config
		*out = new(PDConfigWraper)
		(*in).DeepCopyInto(*out)
	}
	if in.TLSClientSecretName != nil {
		in, out := &in.TLSClientSecretName, &out.TLSClientSecretName
		*out = new(string)
		**out = **in
	}
	if in.EnableDashboardInternalProxy != nil {
		in, out := &in.EnableDashboardInternalProxy, &out.EnableDashboardInternalProxy
		*out = new(bool)
		**out = **in
	}
	if in.MountClusterClientSecret != nil {
		in, out := &in.MountClusterClientSecret, &out.MountClusterClientSecret
		*out = new(bool)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PDSpec.
func (in *PDSpec) DeepCopy() *PDSpec {
	if in == nil {
		return nil
	}
	out := new(PDSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PDStatus) DeepCopyInto(out *PDStatus) {
	*out = *in
	if in.StatefulSet != nil {
		in, out := &in.StatefulSet, &out.StatefulSet
		*out = new(appsv1.StatefulSetStatus)
		(*in).DeepCopyInto(*out)
	}
	if in.Members != nil {
		in, out := &in.Members, &out.Members
		*out = make(map[string]PDMember, len(*in))
		for key, val := range *in {
			(*out)[key] = *val.DeepCopy()
		}
	}
	if in.PeerMembers != nil {
		in, out := &in.PeerMembers, &out.PeerMembers
		*out = make(map[string]PDMember, len(*in))
		for key, val := range *in {
			(*out)[key] = *val.DeepCopy()
		}
	}
	in.Leader.DeepCopyInto(&out.Leader)
	if in.FailureMembers != nil {
		in, out := &in.FailureMembers, &out.FailureMembers
		*out = make(map[string]PDFailureMember, len(*in))
		for key, val := range *in {
			(*out)[key] = *val.DeepCopy()
		}
	}
	if in.UnjoinedMembers != nil {
		in, out := &in.UnjoinedMembers, &out.UnjoinedMembers
		*out = make(map[string]UnjoinedMember, len(*in))
		for key, val := range *in {
			(*out)[key] = *val.DeepCopy()
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PDStatus.
func (in *PDStatus) DeepCopy() *PDStatus {
	if in == nil {
		return nil
	}
	out := new(PDStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PDStoreLabel) DeepCopyInto(out *PDStoreLabel) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PDStoreLabel.
func (in *PDStoreLabel) DeepCopy() *PDStoreLabel {
	if in == nil {
		return nil
	}
	out := new(PDStoreLabel)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in PDStoreLabels) DeepCopyInto(out *PDStoreLabels) {
	{
		in := &in
		*out = make(PDStoreLabels, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
		return
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PDStoreLabels.
func (in PDStoreLabels) DeepCopy() PDStoreLabels {
	if in == nil {
		return nil
	}
	out := new(PDStoreLabels)
	in.DeepCopyInto(out)
	return *out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Performance) DeepCopyInto(out *Performance) {
	*out = *in
	if in.MaxProcs != nil {
		in, out := &in.MaxProcs, &out.MaxProcs
		*out = new(uint)
		**out = **in
	}
	if in.MaxMemory != nil {
		in, out := &in.MaxMemory, &out.MaxMemory
		*out = new(uint64)
		**out = **in
	}
	if in.StatsLease != nil {
		in, out := &in.StatsLease, &out.StatsLease
		*out = new(string)
		**out = **in
	}
	if in.StmtCountLimit != nil {
		in, out := &in.StmtCountLimit, &out.StmtCountLimit
		*out = new(uint)
		**out = **in
	}
	if in.FeedbackProbability != nil {
		in, out := &in.FeedbackProbability, &out.FeedbackProbability
		*out = new(float64)
		**out = **in
	}
	if in.QueryFeedbackLimit != nil {
		in, out := &in.QueryFeedbackLimit, &out.QueryFeedbackLimit
		*out = new(uint)
		**out = **in
	}
	if in.PseudoEstimateRatio != nil {
		in, out := &in.PseudoEstimateRatio, &out.PseudoEstimateRatio
		*out = new(float64)
		**out = **in
	}
	if in.ForcePriority != nil {
		in, out := &in.ForcePriority, &out.ForcePriority
		*out = new(string)
		**out = **in
	}
	if in.BindInfoLease != nil {
		in, out := &in.BindInfoLease, &out.BindInfoLease
		*out = new(string)
		**out = **in
	}
	if in.TxnTotalSizeLimit != nil {
		in, out := &in.TxnTotalSizeLimit, &out.TxnTotalSizeLimit
		*out = new(uint64)
		**out = **in
	}
	if in.TCPKeepAlive != nil {
		in, out := &in.TCPKeepAlive, &out.TCPKeepAlive
		*out = new(bool)
		**out = **in
	}
	if in.CrossJoin != nil {
		in, out := &in.CrossJoin, &out.CrossJoin
		*out = new(bool)
		**out = **in
	}
	if in.RunAutoAnalyze != nil {
		in, out := &in.RunAutoAnalyze, &out.RunAutoAnalyze
		*out = new(bool)
		**out = **in
	}
	if in.DistinctAggPushDown != nil {
		in, out := &in.DistinctAggPushDown, &out.DistinctAggPushDown
		*out = new(bool)
		**out = **in
	}
	if in.CommitterConcurrency != nil {
		in, out := &in.CommitterConcurrency, &out.CommitterConcurrency
		*out = new(int)
		**out = **in
	}
	if in.MaxTxnTTL != nil {
		in, out := &in.MaxTxnTTL, &out.MaxTxnTTL
		*out = new(uint64)
		**out = **in
	}
	if in.TxnEntryCountLimit != nil {
		in, out := &in.TxnEntryCountLimit, &out.TxnEntryCountLimit
		*out = new(uint64)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Performance.
func (in *Performance) DeepCopy() *Performance {
	if in == nil {
		return nil
	}
	out := new(Performance)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PessimisticTxn) DeepCopyInto(out *PessimisticTxn) {
	*out = *in
	if in.Enable != nil {
		in, out := &in.Enable, &out.Enable
		*out = new(bool)
		**out = **in
	}
	if in.MaxRetryCount != nil {
		in, out := &in.MaxRetryCount, &out.MaxRetryCount
		*out = new(uint)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PessimisticTxn.
func (in *PessimisticTxn) DeepCopy() *PessimisticTxn {
	if in == nil {
		return nil
	}
	out := new(PessimisticTxn)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlanCache) DeepCopyInto(out *PlanCache) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Capacity != nil {
		in, out := &in.Capacity, &out.Capacity
		*out = new(uint)
		**out = **in
	}
	if in.Shards != nil {
		in, out := &in.Shards, &out.Shards
		*out = new(uint)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlanCache.
func (in *PlanCache) DeepCopy() *PlanCache {
	if in == nil {
		return nil
	}
	out := new(PlanCache)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Plugin) DeepCopyInto(out *Plugin) {
	*out = *in
	if in.Dir != nil {
		in, out := &in.Dir, &out.Dir
		*out = new(string)
		**out = **in
	}
	if in.Load != nil {
		in, out := &in.Load, &out.Load
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Plugin.
func (in *Plugin) DeepCopy() *Plugin {
	if in == nil {
		return nil
	}
	out := new(Plugin)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PreparedPlanCache) DeepCopyInto(out *PreparedPlanCache) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Capacity != nil {
		in, out := &in.Capacity, &out.Capacity
		*out = new(uint)
		**out = **in
	}
	if in.MemoryGuardRatio != nil {
		in, out := &in.MemoryGuardRatio, &out.MemoryGuardRatio
		*out = new(float64)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PreparedPlanCache.
func (in *PreparedPlanCache) DeepCopy() *PreparedPlanCache {
	if in == nil {
		return nil
	}
	out := new(PreparedPlanCache)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Profile) DeepCopyInto(out *Profile) {
	*out = *in
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(int32)
		**out = **in
	}
	if in.MaxMemoryUsage != nil {
		in, out := &in.MaxMemoryUsage, &out.MaxMemoryUsage
		*out = new(int64)
		**out = **in
	}
	if in.UseUncompressedCache != nil {
		in, out := &in.UseUncompressedCache, &out.UseUncompressedCache
		*out = new(int32)
		**out = **in
	}
	if in.LoadBalancing != nil {
		in, out := &in.LoadBalancing, &out.LoadBalancing
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Profile.
func (in *Profile) DeepCopy() *Profile {
	if in == nil {
		return nil
	}
	out := new(Profile)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrometheusConfiguration) DeepCopyInto(out *PrometheusConfiguration) {
	*out = *in
	if in.ConfigMapRef != nil {
		in, out := &in.ConfigMapRef, &out.ConfigMapRef
		*out = new(ConfigMapRef)
		(*in).DeepCopyInto(*out)
	}
	if in.CommandOptions != nil {
		in, out := &in.CommandOptions, &out.CommandOptions
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrometheusConfiguration.
func (in *PrometheusConfiguration) DeepCopy() *PrometheusConfiguration {
	if in == nil {
		return nil
	}
	out := new(PrometheusConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrometheusSpec) DeepCopyInto(out *PrometheusSpec) {
	*out = *in
	in.MonitorContainer.DeepCopyInto(&out.MonitorContainer)
	in.Service.DeepCopyInto(&out.Service)
	if in.Ingress != nil {
		in, out := &in.Ingress, &out.Ingress
		*out = new(IngressSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.Config != nil {
		in, out := &in.Config, &out.Config
		*out = new(PrometheusConfiguration)
		(*in).DeepCopyInto(*out)
	}
	if in.RemoteWrite != nil {
		in, out := &in.RemoteWrite, &out.RemoteWrite
		*out = make([]*RemoteWriteSpec, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(RemoteWriteSpec)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.AdditionalVolumeMounts != nil {
		in, out := &in.AdditionalVolumeMounts, &out.AdditionalVolumeMounts
		*out = make([]v1.VolumeMount, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrometheusSpec.
func (in *PrometheusSpec) DeepCopy() *PrometheusSpec {
	if in == nil {
		return nil
	}
	out := new(PrometheusSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProxyConfig) DeepCopyInto(out *ProxyConfig) {
	*out = *in
	if in.LogLevel != nil {
		in, out := &in.LogLevel, &out.LogLevel
		*out = new(string)
		**out = **in
	}
	if in.LogFile != nil {
		in, out := &in.LogFile, &out.LogFile
		*out = new(string)
		**out = **in
	}
	if in.LogRotationTimespan != nil {
		in, out := &in.LogRotationTimespan, &out.LogRotationTimespan
		*out = new(string)
		**out = **in
	}
	if in.PanicWhenUnexpectedKeyOrData != nil {
		in, out := &in.PanicWhenUnexpectedKeyOrData, &out.PanicWhenUnexpectedKeyOrData
		*out = new(bool)
		**out = **in
	}
	if in.Server != nil {
		in, out := &in.Server, &out.Server
		*out = new(FlashServerConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(TiKVStorageConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.Raftstore != nil {
		in, out := &in.Raftstore, &out.Raftstore
		*out = new(TiKVRaftstoreConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.Rocksdb != nil {
		in, out := &in.Rocksdb, &out.Rocksdb
		*out = new(TiKVDbConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.Coprocessor != nil {
		in, out := &in.Coprocessor, &out.Coprocessor
		*out = new(TiKVCoprocessorConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.ReadPool != nil {
		in, out := &in.ReadPool, &out.ReadPool
		*out = new(TiKVReadPoolConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.RaftDB != nil {
		in, out := &in.RaftDB, &out.RaftDB
		*out = new(TiKVRaftDBConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.Import != nil {
		in, out := &in.Import, &out.Import
		*out = new(TiKVImportConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.GC != nil {
		in, out := &in.GC, &out.GC
		*out = new(TiKVGCConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.PD != nil {
		in, out := &in.PD, &out.PD
		*out = new(TiKVPDConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.Security != nil {
		in, out := &in.Security, &out.Security
		*out = new(TiKVSecurityConfig)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProxyConfig.
func (in *ProxyConfig) DeepCopy() *ProxyConfig {
	if in == nil {
		return nil
	}
	out := new(ProxyConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProxyProtocol) DeepCopyInto(out *ProxyProtocol) {
	*out = *in
	if in.Networks != nil {
		in, out := &in.Networks, &out.Networks
		*out = new(string)
		**out = **in
	}
	if in.HeaderTimeout != nil {
		in, out := &in.HeaderTimeout, &out.HeaderTimeout
		*out = new(uint)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProxyProtocol.
func (in *ProxyProtocol) DeepCopy() *ProxyProtocol {
	if in == nil {
		return nil
	}
	out := new(ProxyProtocol)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PumpSpec) DeepCopyInto(out *PumpSpec) {
	*out = *in
	in.ComponentSpec.DeepCopyInto(&out.ComponentSpec)
	in.ResourceRequirements.DeepCopyInto(&out.ResourceRequirements)
	if in.StorageClassName != nil {
		in, out := &in.StorageClassName, &out.StorageClassName
		*out = new(string)
		**out = **in
	}
	if in.Config != nil {
		in, out := &in.Config, &out.Config
		*out = (*in).DeepCopy()
	}
	if in.SetTimeZone != nil {
		in, out := &in.SetTimeZone, &out.SetTimeZone
		*out = new(bool)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PumpSpec.
func (in *PumpSpec) DeepCopy() *PumpSpec {
	if in == nil {
		return nil
	}
	out := new(PumpSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PumpStatus) DeepCopyInto(out *PumpStatus) {
	*out = *in
	if in.StatefulSet != nil {
		in, out := &in.StatefulSet, &out.StatefulSet
		*out = new(appsv1.StatefulSetStatus)
		(*in).DeepCopyInto(*out)
	}
	if in.Members != nil {
		in, out := &in.Members, &out.Members
		*out = make([]*binlog.NodeStatus, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(binlog.NodeStatus)
				**out = **in
			}
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PumpStatus.
func (in *PumpStatus) DeepCopy() *PumpStatus {
	if in == nil {
		return nil
	}
	out := new(PumpStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QueueConfig) DeepCopyInto(out *QueueConfig) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QueueConfig.
func (in *QueueConfig) DeepCopy() *QueueConfig {
	if in == nil {
		return nil
	}
	out := new(QueueConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Quota) DeepCopyInto(out *Quota) {
	*out = *in
	if in.Interval != nil {
		in, out := &in.Interval, &out.Interval
		*out = new(Interval)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Quota.
func (in *Quota) DeepCopy() *Quota {
	if in == nil {
		return nil
	}
	out := new(Quota)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RelabelConfig) DeepCopyInto(out *RelabelConfig) {
	*out = *in
	if in.SourceLabels != nil {
		in, out := &in.SourceLabels, &out.SourceLabels
		*out = make(model.LabelNames, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RelabelConfig.
func (in *RelabelConfig) DeepCopy() *RelabelConfig {
	if in == nil {
		return nil
	}
	out := new(RelabelConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReloaderSpec) DeepCopyInto(out *ReloaderSpec) {
	*out = *in
	in.MonitorContainer.DeepCopyInto(&out.MonitorContainer)
	in.Service.DeepCopyInto(&out.Service)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReloaderSpec.
func (in *ReloaderSpec) DeepCopy() *ReloaderSpec {
	if in == nil {
		return nil
	}
	out := new(ReloaderSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RemoteWriteSpec) DeepCopyInto(out *RemoteWriteSpec) {
	*out = *in
	if in.WriteRelabelConfigs != nil {
		in, out := &in.WriteRelabelConfigs, &out.WriteRelabelConfigs
		*out = make([]RelabelConfig, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.BasicAuth != nil {
		in, out := &in.BasicAuth, &out.BasicAuth
		*out = new(BasicAuth)
		(*in).DeepCopyInto(*out)
	}
	if in.TLSConfig != nil {
		in, out := &in.TLSConfig, &out.TLSConfig
		*out = new(TLSConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.ProxyURL != nil {
		in, out := &in.ProxyURL, &out.ProxyURL
		*out = new(string)
		**out = **in
	}
	if in.QueueConfig != nil {
		in, out := &in.QueueConfig, &out.QueueConfig
		*out = new(QueueConfig)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RemoteWriteSpec.
func (in *RemoteWriteSpec) DeepCopy() *RemoteWriteSpec {
	if in == nil {
		return nil
	}
	out := new(RemoteWriteSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Restore) DeepCopyInto(out *Restore) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Restore.
func (in *Restore) DeepCopy() *Restore {
	if in == nil {
		return nil
	}
	out := new(Restore)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Restore) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RestoreCondition) DeepCopyInto(out *RestoreCondition) {
	*out = *in
	in.LastTransitionTime.DeepCopyInto(&out.LastTransitionTime)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RestoreCondition.
func (in *RestoreCondition) DeepCopy() *RestoreCondition {
	if in == nil {
		return nil
	}
	out := new(RestoreCondition)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RestoreList) DeepCopyInto(out *RestoreList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Restore, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RestoreList.
func (in *RestoreList) DeepCopy() *RestoreList {
	if in == nil {
		return nil
	}
	out := new(RestoreList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RestoreList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RestoreSpec) DeepCopyInto(out *RestoreSpec) {
	*out = *in
	in.ResourceRequirements.DeepCopyInto(&out.ResourceRequirements)
	if in.Env != nil {
		in, out := &in.Env, &out.Env
		*out = make([]v1.EnvVar, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.To != nil {
		in, out := &in.To, &out.To
		*out = new(TiDBAccessConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.TikvGCLifeTime != nil {
		in, out := &in.TikvGCLifeTime, &out.TikvGCLifeTime
		*out = new(string)
		**out = **in
	}
	in.StorageProvider.DeepCopyInto(&out.StorageProvider)
	if in.StorageClassName != nil {
		in, out := &in.StorageClassName, &out.StorageClassName
		*out = new(string)
		**out = **in
	}
	if in.BR != nil {
		in, out := &in.BR, &out.BR
		*out = new(BRConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.Tolerations != nil {
		in, out := &in.Tolerations, &out.Tolerations
		*out = make([]v1.Toleration, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Affinity != nil {
		in, out := &in.Affinity, &out.Affinity
		*out = new(v1.Affinity)
		(*in).DeepCopyInto(*out)
	}
	if in.ImagePullSecrets != nil {
		in, out := &in.ImagePullSecrets, &out.ImagePullSecrets
		*out = make([]v1.LocalObjectReference, len(*in))
		copy(*out, *in)
	}
	if in.TableFilter != nil {
		in, out := &in.TableFilter, &out.TableFilter
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.PodSecurityContext != nil {
		in, out := &in.PodSecurityContext, &out.PodSecurityContext
		*out = new(v1.PodSecurityContext)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RestoreSpec.
func (in *RestoreSpec) DeepCopy() *RestoreSpec {
	if in == nil {
		return nil
	}
	out := new(RestoreSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RestoreStatus) DeepCopyInto(out *RestoreStatus) {
	*out = *in
	in.TimeStarted.DeepCopyInto(&out.TimeStarted)
	in.TimeCompleted.DeepCopyInto(&out.TimeCompleted)
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]RestoreCondition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RestoreStatus.
func (in *RestoreStatus) DeepCopy() *RestoreStatus {
	if in == nil {
		return nil
	}
	out := new(RestoreStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *S3StorageProvider) DeepCopyInto(out *S3StorageProvider) {
	*out = *in
	if in.Options != nil {
		in, out := &in.Options, &out.Options
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new S3StorageProvider.
func (in *S3StorageProvider) DeepCopy() *S3StorageProvider {
	if in == nil {
		return nil
	}
	out := new(S3StorageProvider)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SafeTLSConfig) DeepCopyInto(out *SafeTLSConfig) {
	*out = *in
	in.CA.DeepCopyInto(&out.CA)
	in.Cert.DeepCopyInto(&out.Cert)
	if in.KeySecret != nil {
		in, out := &in.KeySecret, &out.KeySecret
		*out = new(v1.SecretKeySelector)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SafeTLSConfig.
func (in *SafeTLSConfig) DeepCopy() *SafeTLSConfig {
	if in == nil {
		return nil
	}
	out := new(SafeTLSConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecretOrConfigMap) DeepCopyInto(out *SecretOrConfigMap) {
	*out = *in
	if in.Secret != nil {
		in, out := &in.Secret, &out.Secret
		*out = new(v1.SecretKeySelector)
		(*in).DeepCopyInto(*out)
	}
	if in.ConfigMap != nil {
		in, out := &in.ConfigMap, &out.ConfigMap
		*out = new(v1.ConfigMapKeySelector)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecretOrConfigMap.
func (in *SecretOrConfigMap) DeepCopy() *SecretOrConfigMap {
	if in == nil {
		return nil
	}
	out := new(SecretOrConfigMap)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecretRef) DeepCopyInto(out *SecretRef) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecretRef.
func (in *SecretRef) DeepCopy() *SecretRef {
	if in == nil {
		return nil
	}
	out := new(SecretRef)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Security) DeepCopyInto(out *Security) {
	*out = *in
	if in.SkipGrantTable != nil {
		in, out := &in.SkipGrantTable, &out.SkipGrantTable
		*out = new(bool)
		**out = **in
	}
	if in.SSLCA != nil {
		in, out := &in.SSLCA, &out.SSLCA
		*out = new(string)
		**out = **in
	}
	if in.SSLCert != nil {
		in, out := &in.SSLCert, &out.SSLCert
		*out = new(string)
		**out = **in
	}
	if in.SSLKey != nil {
		in, out := &in.SSLKey, &out.SSLKey
		*out = new(string)
		**out = **in
	}
	if in.ClusterSSLCA != nil {
		in, out := &in.ClusterSSLCA, &out.ClusterSSLCA
		*out = new(string)
		**out = **in
	}
	if in.ClusterSSLCert != nil {
		in, out := &in.ClusterSSLCert, &out.ClusterSSLCert
		*out = new(string)
		**out = **in
	}
	if in.ClusterSSLKey != nil {
		in, out := &in.ClusterSSLKey, &out.ClusterSSLKey
		*out = new(string)
		**out = **in
	}
	if in.ClusterVerifyCN != nil {
		in, out := &in.ClusterVerifyCN, &out.ClusterVerifyCN
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Security.
func (in *Security) DeepCopy() *Security {
	if in == nil {
		return nil
	}
	out := new(Security)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Service) DeepCopyInto(out *Service) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Service.
func (in *Service) DeepCopy() *Service {
	if in == nil {
		return nil
	}
	out := new(Service)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceSpec) DeepCopyInto(out *ServiceSpec) {
	*out = *in
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.LoadBalancerIP != nil {
		in, out := &in.LoadBalancerIP, &out.LoadBalancerIP
		*out = new(string)
		**out = **in
	}
	if in.ClusterIP != nil {
		in, out := &in.ClusterIP, &out.ClusterIP
		*out = new(string)
		**out = **in
	}
	if in.PortName != nil {
		in, out := &in.PortName, &out.PortName
		*out = new(string)
		**out = **in
	}
	if in.LoadBalancerSourceRanges != nil {
		in, out := &in.LoadBalancerSourceRanges, &out.LoadBalancerSourceRanges
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceSpec.
func (in *ServiceSpec) DeepCopy() *ServiceSpec {
	if in == nil {
		return nil
	}
	out := new(ServiceSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Status) DeepCopyInto(out *Status) {
	*out = *in
	if in.MetricsAddr != nil {
		in, out := &in.MetricsAddr, &out.MetricsAddr
		*out = new(string)
		**out = **in
	}
	if in.MetricsInterval != nil {
		in, out := &in.MetricsInterval, &out.MetricsInterval
		*out = new(uint)
		**out = **in
	}
	if in.ReportStatus != nil {
		in, out := &in.ReportStatus, &out.ReportStatus
		*out = new(bool)
		**out = **in
	}
	if in.RecordQPSbyDB != nil {
		in, out := &in.RecordQPSbyDB, &out.RecordQPSbyDB
		*out = new(bool)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Status.
func (in *Status) DeepCopy() *Status {
	if in == nil {
		return nil
	}
	out := new(Status)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StmtSummary) DeepCopyInto(out *StmtSummary) {
	*out = *in
	if in.Enable != nil {
		in, out := &in.Enable, &out.Enable
		*out = new(bool)
		**out = **in
	}
	if in.EnableInternalQuery != nil {
		in, out := &in.EnableInternalQuery, &out.EnableInternalQuery
		*out = new(bool)
		**out = **in
	}
	if in.MaxStmtCount != nil {
		in, out := &in.MaxStmtCount, &out.MaxStmtCount
		*out = new(uint)
		**out = **in
	}
	if in.MaxSQLLength != nil {
		in, out := &in.MaxSQLLength, &out.MaxSQLLength
		*out = new(uint)
		**out = **in
	}
	if in.RefreshInterval != nil {
		in, out := &in.RefreshInterval, &out.RefreshInterval
		*out = new(int)
		**out = **in
	}
	if in.HistorySize != nil {
		in, out := &in.HistorySize, &out.HistorySize
		*out = new(int)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StmtSummary.
func (in *StmtSummary) DeepCopy() *StmtSummary {
	if in == nil {
		return nil
	}
	out := new(StmtSummary)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StorageClaim) DeepCopyInto(out *StorageClaim) {
	*out = *in
	in.Resources.DeepCopyInto(&out.Resources)
	if in.StorageClassName != nil {
		in, out := &in.StorageClassName, &out.StorageClassName
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StorageClaim.
func (in *StorageClaim) DeepCopy() *StorageClaim {
	if in == nil {
		return nil
	}
	out := new(StorageClaim)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StorageProvider) DeepCopyInto(out *StorageProvider) {
	*out = *in
	if in.S3 != nil {
		in, out := &in.S3, &out.S3
		*out = new(S3StorageProvider)
		(*in).DeepCopyInto(*out)
	}
	if in.Gcs != nil {
		in, out := &in.Gcs, &out.Gcs
		*out = new(GcsStorageProvider)
		**out = **in
	}
	if in.Local != nil {
		in, out := &in.Local, &out.Local
		*out = new(LocalStorageProvider)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StorageProvider.
func (in *StorageProvider) DeepCopy() *StorageProvider {
	if in == nil {
		return nil
	}
	out := new(StorageProvider)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StorageVolume) DeepCopyInto(out *StorageVolume) {
	*out = *in
	if in.StorageClassName != nil {
		in, out := &in.StorageClassName, &out.StorageClassName
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StorageVolume.
func (in *StorageVolume) DeepCopy() *StorageVolume {
	if in == nil {
		return nil
	}
	out := new(StorageVolume)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TLSCluster) DeepCopyInto(out *TLSCluster) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TLSCluster.
func (in *TLSCluster) DeepCopy() *TLSCluster {
	if in == nil {
		return nil
	}
	out := new(TLSCluster)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TLSConfig) DeepCopyInto(out *TLSConfig) {
	*out = *in
	in.SafeTLSConfig.DeepCopyInto(&out.SafeTLSConfig)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TLSConfig.
func (in *TLSConfig) DeepCopy() *TLSConfig {
	if in == nil {
		return nil
	}
	out := new(TLSConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ThanosSpec) DeepCopyInto(out *ThanosSpec) {
	*out = *in
	in.MonitorContainer.DeepCopyInto(&out.MonitorContainer)
	if in.ObjectStorageConfig != nil {
		in, out := &in.ObjectStorageConfig, &out.ObjectStorageConfig
		*out = new(v1.SecretKeySelector)
		(*in).DeepCopyInto(*out)
	}
	if in.ObjectStorageConfigFile != nil {
		in, out := &in.ObjectStorageConfigFile, &out.ObjectStorageConfigFile
		*out = new(string)
		**out = **in
	}
	if in.TracingConfig != nil {
		in, out := &in.TracingConfig, &out.TracingConfig
		*out = new(v1.SecretKeySelector)
		(*in).DeepCopyInto(*out)
	}
	if in.TracingConfigFile != nil {
		in, out := &in.TracingConfigFile, &out.TracingConfigFile
		*out = new(string)
		**out = **in
	}
	if in.GRPCServerTLSConfig != nil {
		in, out := &in.GRPCServerTLSConfig, &out.GRPCServerTLSConfig
		*out = new(TLSConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.AdditionalVolumeMounts != nil {
		in, out := &in.AdditionalVolumeMounts, &out.AdditionalVolumeMounts
		*out = make([]v1.VolumeMount, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ThanosSpec.
func (in *ThanosSpec) DeepCopy() *ThanosSpec {
	if in == nil {
		return nil
	}
	out := new(ThanosSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TiCDCCapture) DeepCopyInto(out *TiCDCCapture) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TiCDCCapture.
func (in *TiCDCCapture) DeepCopy() *TiCDCCapture {
	if in == nil {
		return nil
	}
	out := new(TiCDCCapture)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TiCDCConfig) DeepCopyInto(out *TiCDCConfig) {
	*out = *in
	if in.Timezone != nil {
		in, out := &in.Timezone, &out.Timezone
		*out = new(string)
		**out = **in
	}
	if in.GCTTL != nil {
		in, out := &in.GCTTL, &out.GCTTL
		*out = new(int32)
		**out = **in
	}
	if in.LogLevel != nil {
		in, out := &in.LogLevel, &out.LogLevel
		*out = new(string)
		**out = **in
	}
	if in.LogFile != nil {
		in, out := &in.LogFile, &out.LogFile
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TiCDCConfig.
func (in *TiCDCConfig) DeepCopy() *TiCDCConfig {
	if in == nil {
		return nil
	}
	out := new(TiCDCConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TiCDCSpec) DeepCopyInto(out *TiCDCSpec) {
	*out = *in
	in.ComponentSpec.DeepCopyInto(&out.ComponentSpec)
	in.ResourceRequirements.DeepCopyInto(&out.ResourceRequirements)
	if in.TLSClientSecretNames != nil {
		in, out := &in.TLSClientSecretNames, &out.TLSClientSecretNames
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Config != nil {
		in, out := &in.Config, &out.Config
		*out = new(CDCConfigWraper)
		(*in).DeepCopyInto(*out)
	}
	if in.StorageVolumes != nil {
		in, out := &in.StorageVolumes, &out.StorageVolumes
		*out = make([]StorageVolume, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StorageClassName != nil {
		in, out := &in.StorageClassName, &out.StorageClassName
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TiCDCSpec.
func (in *TiCDCSpec) DeepCopy() *TiCDCSpec {
	if in == nil {
		return nil
	}
	out := new(TiCDCSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TiCDCStatus) DeepCopyInto(out *TiCDCStatus) {
	*out = *in
	if in.StatefulSet != nil {
		in, out := &in.StatefulSet, &out.StatefulSet
		*out = new(appsv1.StatefulSetStatus)
		(*in).DeepCopyInto(*out)
	}
	if in.Captures != nil {
		in, out := &in.Captures, &out.Captures
		*out = make(map[string]TiCDCCapture, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TiCDCStatus.
func (in *TiCDCStatus) DeepCopy() *TiCDCStatus {
	if in == nil {
		return nil
	}
	out := new(TiCDCStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TiDBAccessConfig) DeepCopyInto(out *TiDBAccessConfig) {
	*out = *in
	if in.TLSClientSecretName != nil {
		in, out := &in.TLSClientSecretName, &out.TLSClientSecretName
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TiDBAccessConfig.
func (in *TiDBAccessConfig) DeepCopy() *TiDBAccessConfig {
	if in == nil {
		return nil
	}
	out := new(TiDBAccessConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TiDBConfig) DeepCopyInto(out *TiDBConfig) {
	*out = *in
	if in.Cors != nil {
		in, out := &in.Cors, &out.Cors
		*out = new(string)
		**out = **in
	}
	if in.Socket != nil {
		in, out := &in.Socket, &out.Socket
		*out = new(string)
		**out = **in
	}
	if in.Lease != nil {
		in, out := &in.Lease, &out.Lease
		*out = new(string)
		**out = **in
	}
	if in.RunDDL != nil {
		in, out := &in.RunDDL, &out.RunDDL
		*out = new(bool)
		**out = **in
	}
	if in.SplitTable != nil {
		in, out := &in.SplitTable, &out.SplitTable
		*out = new(bool)
		**out = **in
	}
	if in.TokenLimit != nil {
		in, out := &in.TokenLimit, &out.TokenLimit
		*out = new(uint)
		**out = **in
	}
	if in.OOMUseTmpStorage != nil {
		in, out := &in.OOMUseTmpStorage, &out.OOMUseTmpStorage
		*out = new(bool)
		**out = **in
	}
	if in.TempStoragePath != nil {
		in, out := &in.TempStoragePath, &out.TempStoragePath
		*out = new(string)
		**out = **in
	}
	if in.OOMAction != nil {
		in, out := &in.OOMAction, &out.OOMAction
		*out = new(string)
		**out = **in
	}
	if in.MaxIndexLength != nil {
		in, out := &in.MaxIndexLength, &out.MaxIndexLength
		*out = new(int64)
		**out = **in
	}
	if in.MemQuotaQuery != nil {
		in, out := &in.MemQuotaQuery, &out.MemQuotaQuery
		*out = new(int64)
		**out = **in
	}
	if in.TempStorageQuota != nil {
		in, out := &in.TempStorageQuota, &out.TempStorageQuota
		*out = new(int64)
		**out = **in
	}
	if in.EnableStreaming != nil {
		in, out := &in.EnableStreaming, &out.EnableStreaming
		*out = new(bool)
		**out = **in
	}
	if in.EnableBatchDML != nil {
		in, out := &in.EnableBatchDML, &out.EnableBatchDML
		*out = new(bool)
		**out = **in
	}
	if in.TxnLocalLatches != nil {
		in, out := &in.TxnLocalLatches, &out.TxnLocalLatches
		*out = new(TxnLocalLatches)
		(*in).DeepCopyInto(*out)
	}
	if in.LowerCaseTableNames != nil {
		in, out := &in.LowerCaseTableNames, &out.LowerCaseTableNames
		*out = new(int)
		**out = **in
	}
	if in.Log != nil {
		in, out := &in.Log, &out.Log
		*out = new(Log)
		(*in).DeepCopyInto(*out)
	}
	if in.Security != nil {
		in, out := &in.Security, &out.Security
		*out = new(Security)
		(*in).DeepCopyInto(*out)
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(Status)
		(*in).DeepCopyInto(*out)
	}
	if in.Performance != nil {
		in, out := &in.Performance, &out.Performance
		*out = new(Performance)
		(*in).DeepCopyInto(*out)
	}
	if in.PreparedPlanCache != nil {
		in, out := &in.PreparedPlanCache, &out.PreparedPlanCache
		*out = new(PreparedPlanCache)
		(*in).DeepCopyInto(*out)
	}
	if in.OpenTracing != nil {
		in, out := &in.OpenTracing, &out.OpenTracing
		*out = new(OpenTracing)
		(*in).DeepCopyInto(*out)
	}
	if in.ProxyProtocol != nil {
		in, out := &in.ProxyProtocol, &out.ProxyProtocol
		*out = new(ProxyProtocol)
		(*in).DeepCopyInto(*out)
	}
	if in.TiKVClient != nil {
		in, out := &in.TiKVClient, &out.TiKVClient
		*out = new(TiKVClient)
		(*in).DeepCopyInto(*out)
	}
	if in.Binlog != nil {
		in, out := &in.Binlog, &out.Binlog
		*out = new(Binlog)
		(*in).DeepCopyInto(*out)
	}
	if in.CompatibleKillQuery != nil {
		in, out := &in.CompatibleKillQuery, &out.CompatibleKillQuery
		*out = new(bool)
		**out = **in
	}
	if in.Plugin != nil {
		in, out := &in.Plugin, &out.Plugin
		*out = new(Plugin)
		(*in).DeepCopyInto(*out)
	}
	if in.PessimisticTxn != nil {
		in, out := &in.PessimisticTxn, &out.PessimisticTxn
		*out = new(PessimisticTxn)
		(*in).DeepCopyInto(*out)
	}
	if in.CheckMb4ValueInUTF8 != nil {
		in, out := &in.CheckMb4ValueInUTF8, &out.CheckMb4ValueInUTF8
		*out = new(bool)
		**out = **in
	}
	if in.AlterPrimaryKey != nil {
		in, out := &in.AlterPrimaryKey, &out.AlterPrimaryKey
		*out = new(bool)
		**out = **in
	}
	if in.TreatOldVersionUTF8AsUTF8MB4 != nil {
		in, out := &in.TreatOldVersionUTF8AsUTF8MB4, &out.TreatOldVersionUTF8AsUTF8MB4
		*out = new(bool)
		**out = **in
	}
	if in.SplitRegionMaxNum != nil {
		in, out := &in.SplitRegionMaxNum, &out.SplitRegionMaxNum
		*out = new(uint64)
		**out = **in
	}
	if in.StmtSummary != nil {
		in, out := &in.StmtSummary, &out.StmtSummary
		*out = new(StmtSummary)
		(*in).DeepCopyInto(*out)
	}
	if in.RepairMode != nil {
		in, out := &in.RepairMode, &out.RepairMode
		*out = new(bool)
		**out = **in
	}
	if in.RepairTableList != nil {
		in, out := &in.RepairTableList, &out.RepairTableList
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.IsolationRead != nil {
		in, out := &in.IsolationRead, &out.IsolationRead
		*out = new(IsolationRead)
		(*in).DeepCopyInto(*out)
	}
	if in.MaxServerConnections != nil {
		in, out := &in.MaxServerConnections, &out.MaxServerConnections
		*out = new(uint32)
		**out = **in
	}
	if in.NewCollationsEnabledOnFirstBootstrap != nil {
		in, out := &in.NewCollationsEnabledOnFirstBootstrap, &out.NewCollationsEnabledOnFirstBootstrap
		*out = new(bool)
		**out = **in
	}
	if in.Experimental != nil {
		in, out := &in.Experimental, &out.Experimental
		*out = new(Experimental)
		(*in).DeepCopyInto(*out)
	}
	if in.EnableDynamicConfig != nil {
		in, out := &in.EnableDynamicConfig, &out.EnableDynamicConfig
		*out = new(bool)
		**out = **in
	}
	if in.EnableTableLock != nil {
		in, out := &in.EnableTableLock, &out.EnableTableLock
		*out = new(bool)
		**out = **in
	}
	if in.DelayCleanTableLock != nil {
		in, out := &in.DelayCleanTableLock, &out.DelayCleanTableLock
		*out = new(uint64)
		**out = **in
	}
	if in.SkipRegisterToDashboard != nil {
		in, out := &in.SkipRegisterToDashboard, &out.SkipRegisterToDashboard
		*out = new(bool)
		**out = **in
	}
	if in.EnableTelemetry != nil {
		in, out := &in.EnableTelemetry, &out.EnableTelemetry
		*out = new(bool)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TiDBConfig.
func (in *TiDBConfig) DeepCopy() *TiDBConfig {
	if in == nil {
		return nil
	}
	out := new(TiDBConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TiDBConfigWraper) DeepCopyInto(out *TiDBConfigWraper) {
	*out = *in
	if in.GenericConfig != nil {
		in, out := &in.GenericConfig, &out.GenericConfig
		*out = (*in).DeepCopy()
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TiDBConfigWraper.
func (in *TiDBConfigWraper) DeepCopy() *TiDBConfigWraper {
	if in == nil {
		return nil
	}
	out := new(TiDBConfigWraper)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TiDBFailureMember) DeepCopyInto(out *TiDBFailureMember) {
	*out = *in
	in.CreatedAt.DeepCopyInto(&out.CreatedAt)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TiDBFailureMember.
func (in *TiDBFailureMember) DeepCopy() *TiDBFailureMember {
	if in == nil {
		return nil
	}
	out := new(TiDBFailureMember)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TiDBMember) DeepCopyInto(out *TiDBMember) {
	*out = *in
	in.LastTransitionTime.DeepCopyInto(&out.LastTransitionTime)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TiDBMember.
func (in *TiDBMember) DeepCopy() *TiDBMember {
	if in == nil {
		return nil
	}
	out := new(TiDBMember)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TiDBProbe) DeepCopyInto(out *TiDBProbe) {
	*out = *in
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TiDBProbe.
func (in *TiDBProbe) DeepCopy() *TiDBProbe {
	if in == nil {
		return nil
	}
	out := new(TiDBProbe)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TiDBServiceSpec) DeepCopyInto(out *TiDBServiceSpec) {
	*out = *in
	in.ServiceSpec.DeepCopyInto(&out.ServiceSpec)
	if in.ExternalTrafficPolicy != nil {
		in, out := &in.ExternalTrafficPolicy, &out.ExternalTrafficPolicy
		*out = new(v1.ServiceExternalTrafficPolicyType)
		**out = **in
	}
	if in.ExposeStatus != nil {
		in, out := &in.ExposeStatus, &out.ExposeStatus
		*out = new(bool)
		**out = **in
	}
	if in.MySQLNodePort != nil {
		in, out := &in.MySQLNodePort, &out.MySQLNodePort
		*out = new(int)
		**out = **in
	}
	if in.StatusNodePort != nil {
		in, out := &in.StatusNodePort, &out.StatusNodePort
		*out = new(int)
		**out = **in
	}
	if in.AdditionalPorts != nil {
		in, out := &in.AdditionalPorts, &out.AdditionalPorts
		*out = make([]v1.ServicePort, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TiDBServiceSpec.
func (in *TiDBServiceSpec) DeepCopy() *TiDBServiceSpec {
	if in == nil {
		return nil
	}
	out := new(TiDBServiceSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TiDBSlowLogTailerSpec) DeepCopyInto(out *TiDBSlowLogTailerSpec) {
	*out = *in
	in.ResourceRequirements.DeepCopyInto(&out.ResourceRequirements)
	if in.Image != nil {
		in, out := &in.Image, &out.Image
		*out = new(string)
		**out = **in
	}
	if in.ImagePullPolicy != nil {
		in, out := &in.ImagePullPolicy, &out.ImagePullPolicy
		*out = new(v1.PullPolicy)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TiDBSlowLogTailerSpec.
func (in *TiDBSlowLogTailerSpec) DeepCopy() *TiDBSlowLogTailerSpec {
	if in == nil {
		return nil
	}
	out := new(TiDBSlowLogTailerSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TiDBSpec) DeepCopyInto(out *TiDBSpec) {
	*out = *in
	in.ComponentSpec.DeepCopyInto(&out.ComponentSpec)
	in.ResourceRequirements.DeepCopyInto(&out.ResourceRequirements)
	if in.Service != nil {
		in, out := &in.Service, &out.Service
		*out = new(TiDBServiceSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.BinlogEnabled != nil {
		in, out := &in.BinlogEnabled, &out.BinlogEnabled
		*out = new(bool)
		**out = **in
	}
	if in.MaxFailoverCount != nil {
		in, out := &in.MaxFailoverCount, &out.MaxFailoverCount
		*out = new(int32)
		**out = **in
	}
	if in.SeparateSlowLog != nil {
		in, out := &in.SeparateSlowLog, &out.SeparateSlowLog
		*out = new(bool)
		**out = **in
	}
	if in.SlowLogTailer != nil {
		in, out := &in.SlowLogTailer, &out.SlowLogTailer
		*out = new(TiDBSlowLogTailerSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.TLSClient != nil {
		in, out := &in.TLSClient, &out.TLSClient
		*out = new(TiDBTLSClient)
		**out = **in
	}
	if in.Plugins != nil {
		in, out := &in.Plugins, &out.Plugins
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Config != nil {
		in, out := &in.Config, &out.Config
		*out = new(TiDBConfigWraper)
		(*in).DeepCopyInto(*out)
	}
	if in.Lifecycle != nil {
		in, out := &in.Lifecycle, &out.Lifecycle
		*out = new(v1.Lifecycle)
		(*in).DeepCopyInto(*out)
	}
	if in.StorageVolumes != nil {
		in, out := &in.StorageVolumes, &out.StorageVolumes
		*out = make([]StorageVolume, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StorageClassName != nil {
		in, out := &in.StorageClassName, &out.StorageClassName
		*out = new(string)
		**out = **in
	}
	if in.ReadinessProbe != nil {
		in, out := &in.ReadinessProbe, &out.ReadinessProbe
		*out = new(TiDBProbe)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TiDBSpec.
func (in *TiDBSpec) DeepCopy() *TiDBSpec {
	if in == nil {
		return nil
	}
	out := new(TiDBSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TiDBStatus) DeepCopyInto(out *TiDBStatus) {
	*out = *in
	if in.StatefulSet != nil {
		in, out := &in.StatefulSet, &out.StatefulSet
		*out = new(appsv1.StatefulSetStatus)
		(*in).DeepCopyInto(*out)
	}
	if in.Members != nil {
		in, out := &in.Members, &out.Members
		*out = make(map[string]TiDBMember, len(*in))
		for key, val := range *in {
			(*out)[key] = *val.DeepCopy()
		}
	}
	if in.FailureMembers != nil {
		in, out := &in.FailureMembers, &out.FailureMembers
		*out = make(map[string]TiDBFailureMember, len(*in))
		for key, val := range *in {
			(*out)[key] = *val.DeepCopy()
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TiDBStatus.
func (in *TiDBStatus) DeepCopy() *TiDBStatus {
	if in == nil {
		return nil
	}
	out := new(TiDBStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TiDBTLSClient) DeepCopyInto(out *TiDBTLSClient) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TiDBTLSClient.
func (in *TiDBTLSClient) DeepCopy() *TiDBTLSClient {
	if in == nil {
		return nil
	}
	out := new(TiDBTLSClient)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TiFlashCommonConfigWraper) DeepCopyInto(out *TiFlashCommonConfigWraper) {
	*out = *in
	if in.GenericConfig != nil {
		in, out := &in.GenericConfig, &out.GenericConfig
		*out = (*in).DeepCopy()
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TiFlashCommonConfigWraper.
func (in *TiFlashCommonConfigWraper) DeepCopy() *TiFlashCommonConfigWraper {
	if in == nil {
		return nil
	}
	out := new(TiFlashCommonConfigWraper)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TiFlashConfig) DeepCopyInto(out *TiFlashConfig) {
	*out = *in
	if in.CommonConfig != nil {
		in, out := &in.CommonConfig, &out.CommonConfig
		*out = new(CommonConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.ProxyConfig != nil {
		in, out := &in.ProxyConfig, &out.ProxyConfig
		*out = new(ProxyConfig)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TiFlashConfig.
func (in *TiFlashConfig) DeepCopy() *TiFlashConfig {
	if in == nil {
		return nil
	}
	out := new(TiFlashConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TiFlashConfigWraper) DeepCopyInto(out *TiFlashConfigWraper) {
	*out = *in
	if in.Common != nil {
		in, out := &in.Common, &out.Common
		*out = new(TiFlashCommonConfigWraper)
		(*in).DeepCopyInto(*out)
	}
	if in.Proxy != nil {
		in, out := &in.Proxy, &out.Proxy
		*out = new(TiFlashProxyConfigWraper)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TiFlashConfigWraper.
func (in *TiFlashConfigWraper) DeepCopy() *TiFlashConfigWraper {
	if in == nil {
		return nil
	}
	out := new(TiFlashConfigWraper)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TiFlashProxyConfigWraper) DeepCopyInto(out *TiFlashProxyConfigWraper) {
	*out = *in
	if in.GenericConfig != nil {
		in, out := &in.GenericConfig, &out.GenericConfig
		*out = (*in).DeepCopy()
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TiFlashProxyConfigWraper.
func (in *TiFlashProxyConfigWraper) DeepCopy() *TiFlashProxyConfigWraper {
	if in == nil {
		return nil
	}
	out := new(TiFlashProxyConfigWraper)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TiFlashSpec) DeepCopyInto(out *TiFlashSpec) {
	*out = *in
	in.ComponentSpec.DeepCopyInto(&out.ComponentSpec)
	in.ResourceRequirements.DeepCopyInto(&out.ResourceRequirements)
	if in.Privileged != nil {
		in, out := &in.Privileged, &out.Privileged
		*out = new(bool)
		**out = **in
	}
	if in.MaxFailoverCount != nil {
		in, out := &in.MaxFailoverCount, &out.MaxFailoverCount
		*out = new(int32)
		**out = **in
	}
	if in.StorageClaims != nil {
		in, out := &in.StorageClaims, &out.StorageClaims
		*out = make([]StorageClaim, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Config != nil {
		in, out := &in.Config, &out.Config
		*out = new(TiFlashConfigWraper)
		(*in).DeepCopyInto(*out)
	}
	if in.LogTailer != nil {
		in, out := &in.LogTailer, &out.LogTailer
		*out = new(LogTailerSpec)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TiFlashSpec.
func (in *TiFlashSpec) DeepCopy() *TiFlashSpec {
	if in == nil {
		return nil
	}
	out := new(TiFlashSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TiFlashStatus) DeepCopyInto(out *TiFlashStatus) {
	*out = *in
	if in.StatefulSet != nil {
		in, out := &in.StatefulSet, &out.StatefulSet
		*out = new(appsv1.StatefulSetStatus)
		(*in).DeepCopyInto(*out)
	}
	if in.Stores != nil {
		in, out := &in.Stores, &out.Stores
		*out = make(map[string]TiKVStore, len(*in))
		for key, val := range *in {
			(*out)[key] = *val.DeepCopy()
		}
	}
	if in.PeerStores != nil {
		in, out := &in.PeerStores, &out.PeerStores
		*out = make(map[string]TiKVStore, len(*in))
		for key, val := range *in {
			(*out)[key] = *val.DeepCopy()
		}
	}
	if in.TombstoneStores != nil {
		in, out := &in.TombstoneStores, &out.TombstoneStores
		*out = make(map[string]TiKVStore, len(*in))
		for key, val := range *in {
			(*out)[key] = *val.DeepCopy()
		}
	}
	if in.FailureStores != nil {
		in, out := &in.FailureStores, &out.FailureStores
		*out = make(map[string]TiKVFailureStore, len(*in))
		for key, val := range *in {
			(*out)[key] = *val.DeepCopy()
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TiFlashStatus